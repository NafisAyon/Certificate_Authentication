{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Meme from '../abis/Meme.json';\nimport Authenticate from '../abis/Authenticate.json';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n}); // leaving out the arguments will default to these values\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n                _context.next = 6;\n                return window.web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                console.log(accounts);\n                _context.t0 = console;\n                _context.next = 11;\n                return window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address).methods.CAaddress(address(accounts[0])).call();\n\n              case 11:\n                _context.t1 = _context.sent;\n\n                _context.t0.log.call(_context.t0, _context.t1);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, contract, memeHash;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Meme.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                contract = web3.eth.Contract(Meme.abi, networkData.address);\n                this.setState({\n                  contract: contract\n                });\n                _context3.next = 14;\n                return contract.methods.get().call();\n\n              case 14:\n                memeHash = _context3.sent;\n                this.setState({\n                  memeHash: memeHash\n                });\n                _context3.next = 19;\n                break;\n\n              case 18:\n                window.alert('Smart contract not deployed to detected network.');\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"Submitting file to ipfs...\");\n      console.log(event.target.name.value);\n      console.log(event.target.name.roll);\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('Ipfs result', result);\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        _this.state.contract.methods.set(result[0].hash).send({\n          from: _this.state.account\n        }).then(function (r) {\n          return _this.setState({\n            memeHash: result[0].hash\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      memeHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null,\n      name: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"App.js\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Certificate Authentication\"), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Account Address : \"), React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.account)))), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"mt-5 mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Admin(Student Registration)\"), React.createElement(\"a\", {\n        href: \"\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"h2\", {\n        className: \"mb-5 mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Student form\"), React.createElement(\"form\", {\n        className: \"mb-5\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Account Address :\"), React.createElement(\"input\", {\n        className: \"ml-3\",\n        type: \"text\",\n        name: \"account\",\n        placeholder: \"Enter Account Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Private Key :\"), React.createElement(\"input\", {\n        className: \"ml-3\",\n        type: \"text\",\n        name: \"key\",\n        placeholder: \"Enter Private Key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Name :\"), React.createElement(\"input\", {\n        className: \"ml-3\",\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Enter Student Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Roll No :\"), React.createElement(\"input\", {\n        className: \"ml-3\",\n        type: \"text\",\n        name: \"roll\",\n        placeholder: \"Enter Student Roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        style: {\n          backgroundColor: '#00A884'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        style: {\n          color: '#000000',\n          backgroundColor: '#000000',\n          height: .5,\n          borderColor: '#000000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Ayon\\Desktop\\Thesis\\Project\\src\\components\\App.js"],"names":["React","Component","Web3","Meme","Authenticate","ipfsClient","require","ipfs","host","port","protocol","App","loadWeb3","loadBlockchainData","window","web3","eth","getAccounts","accounts","console","log","Contract","abi","networks","address","methods","CAaddress","call","ethereum","enable","currentProvider","alert","setState","account","net","getId","networkId","networkData","contract","get","memeHash","props","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","state","onSubmit","name","value","roll","add","error","set","hash","send","from","then","r","backgroundColor","color","height","borderColor"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AACA,IAAMC,IAAI,GAAGF,UAAU,CAAC;AAAEG,EAAAA,IAAI,EAAE,gBAAR;AAA0BC,EAAAA,IAAI,EAAE,IAAhC;AAAsCC,EAAAA,QAAQ,EAAE;AAAhD,CAAD,CAAvB,C,CAAmF;;IAE7EC,G;;;;;;;;;;;;;;;;;uBAGI,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;uBACiBC,MAAM,CAACC,IAAP,CAAYC,GAAZ,CAAgBC,WAAhB,E;;;AAAjBC,gBAAAA,Q;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;8BACAC,O;;uBAAkBL,MAAM,CAACC,IAAP,CAAYC,GAAZ,CAAgBK,QAAhB,CAAyBjB,YAAY,CAACkB,GAAtC,EAA2ClB,YAAY,CAACmB,QAAb,CAAsB,IAAtB,EAA4BC,OAAvE,EAAgFC,OAAhF,CAAwFC,SAAxF,CAAkGF,OAAO,CAACN,QAAQ,CAAC,CAAD,CAAT,CAAzG,EAAwHS,IAAxH,E;;;;;4BAAVP,G;;;;;;;;;;;;;;;;;;;;;;;;;;qBAIJN,MAAM,CAACc,Q;;;;;AACTd,gBAAAA,MAAM,CAACC,IAAP,GAAc,IAAIb,IAAJ,CAASY,MAAM,CAACc,QAAhB,CAAd;;uBACMd,MAAM,CAACc,QAAP,CAAgBC,MAAhB,E;;;;;;;AAEH,oBAAIf,MAAM,CAACC,IAAX,EAAiB;AACpBD,kBAAAA,MAAM,CAACC,IAAP,GAAc,IAAIb,IAAJ,CAASY,MAAM,CAACC,IAAP,CAAYe,eAArB,CAAd;AACD,iBAFI,MAGA;AACHhB,kBAAAA,MAAM,CAACiB,KAAP,CAAa,qEAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIKhB,gBAAAA,I,GAAOD,MAAM,CAACC,I,EACpB;;;uBACuBA,IAAI,CAACC,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACN,qBAAKc,QAAL,CAAc;AAAEC,kBAAAA,OAAO,EAAEf,QAAQ,CAAC,CAAD;AAAnB,iBAAd;;uBACwBH,IAAI,CAACC,GAAL,CAASkB,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AACAC,gBAAAA,W,GAAclC,IAAI,CAACoB,QAAL,CAAca,SAAd,C;;qBACjBC,W;;;;;AACKC,gBAAAA,Q,GAAWvB,IAAI,CAACC,GAAL,CAASK,QAAT,CAAkBlB,IAAI,CAACmB,GAAvB,EAA4Be,WAAW,CAACb,OAAxC,C;AACjB,qBAAKQ,QAAL,CAAc;AAAEM,kBAAAA,QAAQ,EAARA;AAAF,iBAAd;;uBACuBA,QAAQ,CAACb,OAAT,CAAiBc,GAAjB,GAAuBZ,IAAvB,E;;;AAAjBa,gBAAAA,Q;AACN,qBAAKR,QAAL,CAAc;AAAEQ,kBAAAA,QAAQ,EAARA;AAAF,iBAAd;;;;;AAEA1B,gBAAAA,MAAM,CAACiB,KAAP,CAAa,kDAAb;;;;;;;;;;;;;;;;;;AAIJ,eAAYU,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAanBC,WAbmB,GAaL,UAACC,KAAD,EAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIlC,MAAM,CAACmC,UAAX,EAAf;AACAD,MAAAA,MAAM,CAACE,iBAAP,CAAyBL,IAAzB;;AACAG,MAAAA,MAAM,CAACG,SAAP,GAAmB,YAAM;AACvB,cAAKnB,QAAL,CAAc;AAAEoB,UAAAA,MAAM,EAAEC,MAAM,CAACL,MAAM,CAACM,MAAR;AAAhB,SAAd;;AACAnC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,MAAKmC,KAAL,CAAWH,MAAjC;AACD,OAHD;AAID,KAtBkB;;AAAA,UAwBnBI,QAxBmB,GAwBR,UAACb,KAAD,EAAW;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACAzB,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAK,CAACG,MAAN,CAAaW,IAAb,CAAkBC,KAA9B;AACAvC,MAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAK,CAACG,MAAN,CAAaW,IAAb,CAAkBE,IAA9B;AACApD,MAAAA,IAAI,CAACqD,GAAL,CAAS,MAAKL,KAAL,CAAWH,MAApB,EAA4B,UAACS,KAAD,EAAQP,MAAR,EAAmB;AAC7CnC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BkC,MAA3B;;AACA,YAAGO,KAAH,EAAU;AACR1C,UAAAA,OAAO,CAAC0C,KAAR,CAAcA,KAAd;AACA;AACD;;AACA,cAAKN,KAAL,CAAWjB,QAAX,CAAoBb,OAApB,CAA4BqC,GAA5B,CAAgCR,MAAM,CAAC,CAAD,CAAN,CAAUS,IAA1C,EAAgDC,IAAhD,CAAqD;AAAEC,UAAAA,IAAI,EAAE,MAAKV,KAAL,CAAWtB;AAAnB,SAArD,EAAmFiC,IAAnF,CAAwF,UAACC,CAAD,EAAO;AAC7F,iBAAO,MAAKnC,QAAL,CAAc;AAAEQ,YAAAA,QAAQ,EAAEc,MAAM,CAAC,CAAD,CAAN,CAAUS;AAAtB,WAAd,CAAP;AACD,SAFD;AAGF,OATD;AAUD,KAvCkB;;AAGjB,UAAKR,KAAL,GAAa;AACXf,MAAAA,QAAQ,EAAE,EADC;AAEXF,MAAAA,QAAQ,EAAE,IAFC;AAGXvB,MAAAA,IAAI,EAAE,IAHK;AAIXqC,MAAAA,MAAM,EAAE,IAJG;AAKXnB,MAAAA,OAAO,EAAE,IALE;AAMXwB,MAAAA,IAAI,EAAE;AANK,KAAb;AAHiB;AAWlB;;;;6BA8BQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,qCADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EASE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,kDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EACkD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKF,KAAL,CAAWtB,OAA1C,CADlD,CADF,CATF,CADF,EAgBE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,SAAS,EAAC,8BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE;AACE,QAAA,IAAI,EAAC,EADP;AAEE,QAAA,MAAM,EAAC,QAFT;AAGE,QAAA,GAAG,EAAC,qBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,EAWE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXF,EAYE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAE,KAAKuB,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,IAAI,EAAC,MAA7B;AAAoC,QAAA,IAAI,EAAC,SAAzC;AAAmD,QAAA,WAAW,EAAC,uBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CALF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,IAAI,EAAC,MAA7B;AAAoC,QAAA,IAAI,EAAC,KAAzC;AAA+C,QAAA,WAAW,EAAC,mBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CAXF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,IAAI,EAAC,MAA7B;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,WAAW,EAAC,oBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAbF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CAjBF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,IAAI,EAAC,MAA7B;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,WAAW,EAAC,oBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAnBF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CAvBF,EAyBE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKd,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CA1BF,EA4BE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAE;AAAC0B,UAAAA,eAAe,EAAE;AAAlB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BF,CAZF,EA0CE;AAAI,QAAA,KAAK,EAAE;AACPC,UAAAA,KAAK,EAAE,SADA;AAEPD,UAAAA,eAAe,EAAE,SAFV;AAGPE,UAAAA,MAAM,EAAE,EAHD;AAIPC,UAAAA,WAAW,EAAG;AAJP,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1CF,CADF,CADF,CADF,CAhBF,CADF;AA0ED;;;;EA5JetE,S;;AA+JlB,eAAeU,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\nimport Meme from '../abis/Meme.json'\r\nimport Authenticate from '../abis/Authenticate.json'\r\n\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n    const accounts = await window.web3.eth.getAccounts()\r\n    console.log(accounts)\r\n    console.log(await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address).methods.CAaddress(address(accounts[0])).call())\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = Meme.networks[networkId]\r\n    if(networkData) {\r\n      const contract = web3.eth.Contract(Meme.abi, networkData.address)\r\n      this.setState({ contract })\r\n      const memeHash = await contract.methods.get().call()\r\n      this.setState({ memeHash })\r\n    } else {\r\n      window.alert('Smart contract not deployed to detected network.')\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      memeHash: '',\r\n      contract: null,\r\n      web3: null,\r\n      buffer: null,\r\n      account: null,\r\n      name: null\r\n    }\r\n  }\r\n\r\n  captureFile = (event) => {\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => {\r\n      this.setState({ buffer: Buffer(reader.result) })\r\n      console.log('buffer', this.state.buffer)\r\n    }\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault()\r\n    console.log(\"Submitting file to ipfs...\")\r\n    console.log(event.target.name.value)\r\n    console.log(event.target.name.roll)\r\n    ipfs.add(this.state.buffer, (error, result) => {\r\n      console.log('Ipfs result', result)\r\n      if(error) {\r\n        console.error(error)\r\n        return\r\n      }\r\n       this.state.contract.methods.set(result[0].hash).send({ from: this.state.account }).then((r) => {\r\n         return this.setState({ memeHash: result[0].hash })\r\n       })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            href=\"App.js\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Certificate Authentication\r\n          </a>\r\n          <ul className=\"navbar-nav px-3\">\r\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n              <p className=\"text-white\">Account Address : </p><small className=\"text-white\">{this.state.account}</small>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <h1 className=\"mt-5 mr-auto ml-auto\" >Admin(Student Registration)</h1>\r\n                <a\r\n                  href=\"\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  { //<img src={`https://ipfs.infura.io/ipfs/${this.state.memeHash}`} /> \r\n                  }\r\n                </a>\r\n                <p>&nbsp;</p>\r\n                <h2 className=\"mb-5 mr-auto ml-auto\">Student form</h2>\r\n                <form className=\"mb-5\" onSubmit={this.onSubmit}>\r\n                  <label>\r\n                    <b>Account Address :</b>\r\n                    <input className=\"ml-3\" type=\"text\" name=\"account\" placeholder=\"Enter Account Address\"/>\r\n                  </label>\r\n                  <p><br></br></p>\r\n\r\n                  <label>\r\n                    <b>Private Key :</b>\r\n                    <input className=\"ml-3\" type=\"text\" name=\"key\" placeholder=\"Enter Private Key\"/>\r\n                  </label>\r\n                  <p><br></br></p>\r\n\r\n                  <label>\r\n                    <b>Name :</b>\r\n                    <input className=\"ml-3\" type=\"text\" name=\"name\" placeholder=\"Enter Student Name\"/>\r\n                  </label>\r\n                  <p><br></br></p>\r\n\r\n                  <label>\r\n                    <b>Roll No :</b>\r\n                    <input className=\"ml-3\" type=\"text\" name=\"roll\" placeholder=\"Enter Student Roll\"/>\r\n                  </label>\r\n                  <p><br></br></p>\r\n\r\n                  <input type='file' onChange={this.captureFile} />\r\n                  <p><br></br></p>\r\n\r\n                  <input type='submit' style={{backgroundColor: '#00A884'}}/>\r\n                </form>\r\n                <hr style={{\r\n                    color: '#000000',\r\n                    backgroundColor: '#000000',\r\n                    height: .5,\r\n                    borderColor : '#000000'\r\n                }}/>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}