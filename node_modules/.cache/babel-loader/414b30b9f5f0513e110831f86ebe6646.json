{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\src\\\\components\\\\StudentInfo.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Authenticate from '../abis/Authenticate.json';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar projectId = '2H7jMnviMZjZB4fq4w0leaswjCQ';\nvar projectSecret = 'e508e5b9f5e92b15c0f02a871e4b5524';\nvar auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  headers: {\n    authorization: auth\n  }\n}); // leaving out the arguments will default to these values\n\nvar StudentInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StudentInfo, _Component);\n\n  _createClass(StudentInfo, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n                this.setState({\n                  visible: 'hidden'\n                });\n                /*\r\n                const accounts = await window.web3.eth.getAccounts()\r\n                console.log(accounts)\r\n                const contract = await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address)\r\n                console.log(contract)\r\n                const ca = await contract.methods.CAaddress().call()\r\n                console.log(ca)\r\n                console.log(await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address).methods.CAaddress(accounts[0]).call())\r\n                */\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, contract;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                }); //this.setState({ useraccount: accounts[0] })\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Authenticate.networks[networkId];\n                /* if(await this.state.contract.methods.UserInfo(this.state.useraccount).call()){\r\n                 console.log(await this.state.contract.methods.UserInfo(this.state.useraccount).call())\r\n                 }\r\n                 if(this.state.useraccount){\r\n                   const memeHash = await this.state.contract.methods.UserInfo(this.state.useraccount).call()\r\n                 console.log(memeHash)}\r\n                */\n\n                if (networkData) {\n                  contract = web3.eth.Contract(Authenticate.abi, networkData.address);\n                  this.setState({\n                    contract: contract\n                  }); //const memeHash = await contract.methods.get().call()\n                  //this.setState({ memeHash })\n                } else {\n                  window.alert('Smart contract not deployed to detected network.');\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function StudentInfo(props) {\n    var _this;\n\n    _classCallCheck(this, StudentInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StudentInfo).call(this, props));\n\n    _this.setuseraddress =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(event) {\n        var Vname, roll, acc, user;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                event.preventDefault();\n                Vname = event.target.name.value;\n                roll = event.target.roll.value;\n                acc = _this.state.account;\n                _context4.prev = 4;\n                _context4.next = 7;\n                return _this.state.contract.methods.UserInfo(roll, Vname).call({\n                  from: acc\n                });\n\n              case 7:\n                user = _context4.sent;\n\n                _this.setState({\n                  user: user\n                });\n\n                console.log('UserInfo :', user);\n\n                _this.setState({\n                  showHash: _this.state.user[2]\n                });\n\n                _this.setState({\n                  visible: 'visible'\n                }); //window.open(`https://infura-ipfs.io/ipfs/${this.state.showHash}`)\n\n\n                window.open(\"https://ipfs.io/ipfs/\".concat(_this.state.showHash));\n                _context4.next = 18;\n                break;\n\n              case 15:\n                _context4.prev = 15;\n                _context4.t0 = _context4[\"catch\"](4);\n                console.error(_context4.t0);\n\n              case 18:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[4, 15]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      showHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null,\n      name: null,\n      hash: null,\n      roll: null,\n      user: '',\n      visible: 'hidden'\n    };\n    _this.setuseraddress = _this.setuseraddress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(StudentInfo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"mb-5 mt-5 mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Student Info\"), React.createElement(\"form\", {\n        className: \"mb-5\",\n        onSubmit: this.setuseraddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Versity Name : \"), React.createElement(\"select\", {\n        name: \"name\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Select--\"), React.createElement(\"option\", {\n        value: \"Ahsanullah University\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Ahsanullah University\"))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Roll No :\"), React.createElement(\"input\", {\n        className: \"ml-3\",\n        type: \"text\",\n        name: \"roll\",\n        placeholder: \"Enter Student Roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Show User Certificate\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          visibility: \"\".concat(this.state.visible)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"mb-5 mt-5 mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Certificate Info\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Versity Name : \"), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"\".concat(this.state.user[0]))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Student Roll No : \"), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"\".concat(this.state.user[1]))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Certificate Issue Date : \"), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"\".concat(new Date(this.state.user[3] * 1000).toLocaleDateString()))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        style: {\n          color: '#000000',\n          backgroundColor: '#000000',\n          height: .5,\n          borderColor: '#000000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return StudentInfo;\n}(Component);\n\nexport default StudentInfo;","map":{"version":3,"sources":["C:\\Users\\Ayon\\Desktop\\Thesis\\Project\\src\\components\\StudentInfo.js"],"names":["React","Component","Web3","Authenticate","ipfsClient","require","projectId","projectSecret","auth","Buffer","from","toString","ipfs","host","port","protocol","headers","authorization","StudentInfo","loadWeb3","loadBlockchainData","setState","visible","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","account","net","getId","networkId","networkData","networks","contract","Contract","abi","address","props","setuseraddress","event","preventDefault","Vname","target","name","value","roll","acc","state","methods","UserInfo","call","user","console","log","showHash","open","error","buffer","hash","bind","handleChange","visibility","Date","toLocaleDateString","color","backgroundColor","height","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\nimport Authenticate from '../abis/Authenticate.json';\r\n\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst projectId = '2H7jMnviMZjZB4fq4w0leaswjCQ';\r\nconst projectSecret = 'e508e5b9f5e92b15c0f02a871e4b5524';\r\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' ,headers: {authorization: auth,},}) // leaving out the arguments will default to these values\r\n\r\nclass StudentInfo extends Component {\r\n    async componentWillMount() {\r\n        await this.loadWeb3()\r\n        await this.loadBlockchainData()\r\n        this.setState({visible: 'hidden'})\r\n        /*\r\n        const accounts = await window.web3.eth.getAccounts()\r\n        console.log(accounts)\r\n        const contract = await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address)\r\n        console.log(contract)\r\n        const ca = await contract.methods.CAaddress().call()\r\n        console.log(ca)\r\n        console.log(await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address).methods.CAaddress(accounts[0]).call())\r\n        */\r\n      }\r\n\r\n      async loadWeb3() {\r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum)\r\n          await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n        }\r\n      }\r\n    \r\n      async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        // Load account\r\n        const accounts = await web3.eth.getAccounts()\r\n        this.setState({ account: accounts[0] })\r\n        //this.setState({ useraccount: accounts[0] })\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Authenticate.networks[networkId]\r\n    \r\n        /* if(await this.state.contract.methods.UserInfo(this.state.useraccount).call()){\r\n         console.log(await this.state.contract.methods.UserInfo(this.state.useraccount).call())\r\n         }\r\n         if(this.state.useraccount){\r\n           const memeHash = await this.state.contract.methods.UserInfo(this.state.useraccount).call()\r\n         console.log(memeHash)}\r\n        */\r\n    \r\n    \r\n        if (networkData) {\r\n          const contract = web3.eth.Contract(Authenticate.abi, networkData.address)\r\n          this.setState({ contract })\r\n          //const memeHash = await contract.methods.get().call()\r\n          //this.setState({ memeHash })\r\n        } else {\r\n          window.alert('Smart contract not deployed to detected network.')\r\n        }\r\n      }\r\n\r\n      constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n          showHash: '',\r\n          contract: null,\r\n          web3: null,\r\n          buffer: null,\r\n          account: null,\r\n          name: null,\r\n          hash: null,\r\n          roll: null,\r\n          user: '',\r\n          visible: 'hidden'\r\n        }\r\n        this.setuseraddress = this.setuseraddress.bind(this);\r\n      }\r\n\r\n      setuseraddress = async (event) => {\r\n        event.preventDefault()\r\n        const Vname = event.target.name.value\r\n        const roll = event.target.roll.value\r\n        const acc = this.state.account\r\n          try {\r\n            const user = await this.state.contract.methods.UserInfo(roll, Vname).call({from: acc,});\r\n            this.setState({user : user})\r\n            console.log('UserInfo :',user)\r\n            this.setState({showHash : this.state.user[2]})\r\n            this.setState({visible: 'visible'})\r\n            //window.open(`https://infura-ipfs.io/ipfs/${this.state.showHash}`)\r\n            window.open(`https://ipfs.io/ipfs/${this.state.showHash}`)\r\n            \r\n\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n\r\n\r\n        //setTimeout(() => this.showUserInfo(), 15000)\r\n        //setTimeout(() => this.showUserInfo2(), 15300)\r\n        //setTimeout(() => this.showUserInfo3(), 15600)\r\n      }\r\n\r\n\r\n      \r\n\r\n\r\n      render() {\r\n        return (\r\n          <div>\r\n            <h2 className=\"mb-5 mt-5 mr-auto ml-auto\">Student Info</h2>\r\n                <form className=\"mb-5\" onSubmit={this.setuseraddress}>\r\n\r\n                <label>\r\n                      <b>Versity Name : </b>\r\n                      <select name=\"name\" onChange={this.handleChange}>\r\n                        <option value=\"\">Select--</option>\r\n                        <option value=\"Ahsanullah University\">Ahsanullah University</option>\r\n                      </select>\r\n                    </label>\r\n                  <p><br></br></p>\r\n\r\n                  <label>\r\n                    <b>Roll No :</b>\r\n                    <input className=\"ml-3\" type=\"text\" name=\"roll\" placeholder=\"Enter Student Roll\" />\r\n\r\n                  </label>\r\n                  <p><br></br></p>\r\n\r\n                  \r\n                  <button type='submit'>Show User Certificate</button>\r\n                  <p><br></br></p>\r\n                  \r\n                </form>\r\n                <div style={{ visibility: `${this.state.visible}` }}>\r\n                  <h2 className=\"mb-5 mt-5 mr-auto ml-auto\">Certificate Info</h2>\r\n                    <label>\r\n                        <b>Versity Name : </b>\r\n                        <i>{`${this.state.user[0]}`}</i>\r\n                    </label>\r\n                    <p><br></br></p>\r\n\r\n                    <label>\r\n                      <b>Student Roll No : </b>\r\n                      <i>{`${this.state.user[1]}`}</i>\r\n                    </label>\r\n                    <p><br></br></p>\r\n                    <label>\r\n                      <b>Certificate Issue Date : </b>\r\n                      <i>{`${new Date(this.state.user[3] * 1000).toLocaleDateString()}`}</i>\r\n                    </label>\r\n                    <p><br></br></p>\r\n                </div>\r\n                <hr style={{\r\n                  color: '#000000',\r\n                  backgroundColor: '#000000',\r\n                  height: .5,\r\n                  borderColor: '#000000'\r\n                }} />\r\n                <p><br></br></p>\r\n                <p><br></br></p>\r\n                <p><br></br></p>\r\n        </div>\r\n          );\r\n  }\r\n}\r\n\r\nexport default StudentInfo;\r\n\r\n"]},"metadata":{},"sourceType":"module"}