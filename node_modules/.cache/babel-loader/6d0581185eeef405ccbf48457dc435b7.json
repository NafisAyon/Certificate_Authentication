{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\src\\\\components\\\\Admin.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Authenticate from '../abis/Authenticate.json';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar projectId = '2H7jMnviMZjZB4fq4w0leaswjCQ';\nvar projectSecret = 'e508e5b9f5e92b15c0f02a871e4b5524';\nvar auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  headers: {\n    authorization: auth\n  }\n}); // leaving out the arguments will default to these values\n\nvar Admin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Admin, _Component);\n\n  _createClass(Admin, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, contract;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                }); //this.setState({ useraccount: accounts[0] })\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Authenticate.networks[networkId];\n                /* if(await this.state.contract.methods.UserInfo(this.state.useraccount).call()){\r\n                 console.log(await this.state.contract.methods.UserInfo(this.state.useraccount).call())\r\n                 }\r\n                 if(this.state.useraccount){\r\n                   const memeHash = await this.state.contract.methods.UserInfo(this.state.useraccount).call()\r\n                 console.log(memeHash)}\r\n                */\n\n                if (networkData) {\n                  contract = web3.eth.Contract(Authenticate.abi, networkData.address);\n                  this.setState({\n                    contract: contract\n                  }); //const memeHash = await contract.methods.get().call()\n                  //this.setState({ memeHash })\n                } else {\n                  window.alert('Smart contract not deployed to detected network.');\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function Admin(props) {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Admin).call(this, props));\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"Submitting file to ipfs...\");\n      var Vname = event.target.name.value;\n      var roll = event.target.roll.value;\n\n      _this.setState({\n        name: Vname\n      });\n\n      _this.setState({\n        roll: roll\n      });\n\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('Ipfs result', result[0]);\n\n        _this.setState({\n          hash: result[0].hash\n        });\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n        /*\r\n         this.state.contract.methods.set(result[0].hash).send({ from: this.state.account }).then((r) => {\r\n           return this.setState({ memeHash: result[0].hash }),this.setState({ useraccount: useraccount })\r\n           ,this.setState({ name: name }),this.setState({ roll: roll }),this.setState({ key: key })\r\n           ,this.setState({ hash: result[0].hash })\r\n         })\r\n         */\n\n\n        _this.state.contract.methods.CreateUser(Vname, roll, result[0].hash).send({\n          from: _this.state.account\n        }).then(function (r) {\n          return _this.setState({\n            hash: result[0].hash\n          });\n        });\n\n        console.log('Confirming....');\n      }); //console.log(this.state.useraccount)\n    };\n\n    _this.state = {\n      showHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null,\n      name: null,\n      hash: null,\n      roll: null,\n      user: null //this.captureFile = this.captureFile.bind(this);\n      //this.onSubmit3 = this.onSubmit3.bind(this);\n\n    };\n    return _this;\n  }\n\n  _createClass(Admin, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"mt-5 mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Admin(Student Registration)\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"h2\", {\n        className: \"mb-5 mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Student form\"), React.createElement(\"form\", {\n        className: \"mb-5\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Versity Name :\"), React.createElement(\"input\", {\n        className: \"ml-3\",\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Enter Versity Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Roll No :\"), React.createElement(\"input\", {\n        className: \"ml-3\",\n        type: \"text\",\n        name: \"roll\",\n        placeholder: \"Enter Student Roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        style: {\n          backgroundColor: '#00A884'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        style: {\n          color: '#000000',\n          backgroundColor: '#000000',\n          height: .5,\n          borderColor: '#000000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Admin;\n}(Component);\n\nexport default Admin;","map":{"version":3,"sources":["C:\\Users\\Ayon\\Desktop\\Thesis\\Project\\src\\components\\Admin.js"],"names":["React","Component","Web3","Authenticate","ipfsClient","require","projectId","projectSecret","auth","Buffer","from","toString","ipfs","host","port","protocol","headers","authorization","Admin","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","contract","Contract","abi","address","props","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","result","console","log","state","onSubmit","Vname","name","value","roll","add","error","hash","methods","CreateUser","send","then","r","showHash","user","backgroundColor","color","height","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\nimport Authenticate from '../abis/Authenticate.json';\r\n\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst projectId = '2H7jMnviMZjZB4fq4w0leaswjCQ';\r\nconst projectSecret = 'e508e5b9f5e92b15c0f02a871e4b5524';\r\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' ,headers: {authorization: auth,},}) // leaving out the arguments will default to these values\r\n\r\nclass Admin extends Component {\r\n    async componentWillMount() {\r\n        await this.loadWeb3()\r\n        await this.loadBlockchainData()\r\n        /*\r\n        const accounts = await window.web3.eth.getAccounts()\r\n        console.log(accounts)\r\n        const contract = await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address)\r\n        console.log(contract)\r\n        const ca = await contract.methods.CAaddress().call()\r\n        console.log(ca)\r\n        console.log(await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address).methods.CAaddress(accounts[0]).call())\r\n        */\r\n      }\r\n    \r\n      async loadWeb3() {\r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum)\r\n          await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n        }\r\n      }\r\n    \r\n      async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        // Load account\r\n        const accounts = await web3.eth.getAccounts()\r\n        this.setState({ account: accounts[0] })\r\n        //this.setState({ useraccount: accounts[0] })\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Authenticate.networks[networkId]\r\n    \r\n        /* if(await this.state.contract.methods.UserInfo(this.state.useraccount).call()){\r\n         console.log(await this.state.contract.methods.UserInfo(this.state.useraccount).call())\r\n         }\r\n         if(this.state.useraccount){\r\n           const memeHash = await this.state.contract.methods.UserInfo(this.state.useraccount).call()\r\n         console.log(memeHash)}\r\n        */\r\n    \r\n    \r\n        if (networkData) {\r\n          const contract = web3.eth.Contract(Authenticate.abi, networkData.address)\r\n          this.setState({ contract })\r\n          //const memeHash = await contract.methods.get().call()\r\n          //this.setState({ memeHash })\r\n        } else {\r\n          window.alert('Smart contract not deployed to detected network.')\r\n        }\r\n      }\r\n\r\n      constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n          showHash: '',\r\n          contract: null,\r\n          web3: null,\r\n          buffer: null,\r\n          account: null,\r\n          name: null,\r\n          hash: null,\r\n          roll: null,\r\n          user: null\r\n        }\r\n        //this.captureFile = this.captureFile.bind(this);\r\n        //this.onSubmit3 = this.onSubmit3.bind(this);\r\n    \r\n      }\r\n    \r\n    \r\n      captureFile = (event) => {\r\n        event.preventDefault()\r\n        const file = event.target.files[0]\r\n        const reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n        reader.onloadend = () => {\r\n          this.setState({ buffer: Buffer(reader.result) })\r\n          console.log('buffer', this.state.buffer)\r\n        }\r\n      }\r\n    \r\n      onSubmit = (event) => {\r\n        event.preventDefault()\r\n        console.log(\"Submitting file to ipfs...\")\r\n        const Vname = event.target.name.value\r\n        const roll = event.target.roll.value\r\n        this.setState({ name: Vname })\r\n        this.setState({ roll: roll })\r\n        ipfs.add(this.state.buffer, (error, result) => {\r\n          console.log('Ipfs result', result[0])\r\n          this.setState({ hash: result[0].hash })\r\n          if (error) {\r\n            console.error(error)\r\n            return\r\n          }\r\n          /*\r\n           this.state.contract.methods.set(result[0].hash).send({ from: this.state.account }).then((r) => {\r\n             return this.setState({ memeHash: result[0].hash }),this.setState({ useraccount: useraccount })\r\n             ,this.setState({ name: name }),this.setState({ roll: roll }),this.setState({ key: key })\r\n             ,this.setState({ hash: result[0].hash })\r\n           })\r\n           */\r\n          this.state.contract.methods.CreateUser(Vname, roll, result[0].hash).send({ from: this.state.account }).then((r) => {\r\n            return this.setState({ hash: result[0].hash })\r\n          })\r\n          console.log('Confirming....')\r\n        })\r\n        //console.log(this.state.useraccount)\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"mt-5 mr-auto ml-auto\" >Admin(Student Registration)</h1>\r\n                    <p>&nbsp;</p>\r\n                    <h2 className=\"mb-5 mr-auto ml-auto\">Student form</h2>\r\n                    <form className=\"mb-5\" onSubmit={this.onSubmit}>\r\n\r\n                    <label>\r\n                        <b>Versity Name :</b>\r\n                        <input className=\"ml-3\" type=\"text\" name=\"name\" placeholder=\"Enter Versity Name\" />\r\n\r\n                    </label>\r\n                    <p><br></br></p>\r\n\r\n                    <label>\r\n                        <b>Roll No :</b>\r\n                        <input className=\"ml-3\" type=\"text\" name=\"roll\" placeholder=\"Enter Student Roll\" />\r\n\r\n                    </label>\r\n                    <p><br></br></p>\r\n\r\n                    <input type='file' onChange={this.captureFile} />\r\n                    <p><br></br></p>\r\n\r\n                    <input type='submit' style={{ backgroundColor: '#00A884' }} />\r\n                    <p><br></br></p>\r\n                    \r\n                    </form>\r\n\r\n\r\n                    <hr style={{\r\n                    color: '#000000',\r\n                    backgroundColor: '#000000',\r\n                    height: .5,\r\n                    borderColor: '#000000'\r\n                    }} />\r\n            </div>\r\n            );\r\n  }\r\n}\r\n\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}