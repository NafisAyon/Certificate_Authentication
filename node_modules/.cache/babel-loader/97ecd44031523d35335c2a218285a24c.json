{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\src\\\\components\\\\Notice.js\";\nimport React, { Component, useState } from 'react';\nimport Web3 from 'web3';\nimport DatePicker from 'react-date-picker';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport './App.css';\nimport Authenticate from '../abis/Authenticate.json';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar projectId = '2H7jMnviMZjZB4fq4w0leaswjCQ';\nvar projectSecret = 'e508e5b9f5e92b15c0f02a871e4b5524';\nvar auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  headers: {\n    authorization: auth\n  }\n}); // leaving out the arguments will default to these values\n\nvar Notice =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Notice, _Component);\n\n  _createClass(Notice, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n                this.setState({\n                  CDate: \"\".concat(new Date().getFullYear(), \"-\").concat(new Date().getMonth() + 1, \"-\").concat(new Date().getDate())\n                });\n                /*\r\n                const accounts = await window.web3.eth.getAccounts()\r\n                console.log(accounts)\r\n                const contract = await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address)\r\n                console.log(contract)\r\n                const ca = await contract.methods.CAaddress().call()\r\n                console.log(ca)\r\n                console.log(await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address).methods.CAaddress(accounts[0]).call())\r\n                */\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, contract;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                }); //this.setState({ useraccount: accounts[0] })\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Authenticate.networks[networkId];\n                /* if(await this.state.contract.methods.UserInfo(this.state.useraccount).call()){\r\n                 console.log(await this.state.contract.methods.UserInfo(this.state.useraccount).call())\r\n                 }\r\n                 if(this.state.useraccount){\r\n                   const memeHash = await this.state.contract.methods.UserInfo(this.state.useraccount).call()\r\n                 console.log(memeHash)}\r\n                */\n\n                if (networkData) {\n                  contract = web3.eth.Contract(Authenticate.abi, networkData.address);\n                  this.setState({\n                    contract: contract\n                  }); //const memeHash = await contract.methods.get().call()\n                  //this.setState({ memeHash })\n                } else {\n                  window.alert('Smart contract not deployed to detected network.');\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function Notice(props) {\n    var _this;\n\n    _classCallCheck(this, Notice);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Notice).call(this, props));\n\n    _this.ChangeDoc = function (event) {\n      event.preventDefault();\n      var link = event.target.value;\n      window.location = link;\n    };\n\n    _this.handleChange = function (event) {\n      event.preventDefault();\n      var date = event.target.value;\n      console.log(date); // var currentDate = `${new Date().getFullYear()}-${new Date().getMonth()+1}-${new Date().getDate()}`\n      // console.log(currentDate)\n\n      console.log(_this.state.CDate);\n      date = new Date(date); //console.log('date', Math.floor(date.getTime() / 1000))\n\n      var unixTimeStamp = Math.floor(date.getTime() / 1000);\n\n      _this.setState({\n        date: unixTimeStamp\n      });\n\n      console.log(\"\".concat(unixTimeStamp)); //console.log(this.state.date)\n      //console.log('name1', event.target.name1.value)\n    };\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(event) {\n        var Vname, roll, date, unixTimeStamp, Edate, testing;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                event.preventDefault();\n                console.log(\"Submitting file to ipfs...\");\n                Vname = event.target.name.value;\n                roll = event.target.roll.value;\n\n                _this.setState({\n                  name: Vname\n                });\n\n                _this.setState({\n                  roll: roll\n                });\n\n                date = event.target.date.value;\n                date = new Date(date);\n                unixTimeStamp = Math.floor(date.getTime() / 1000);\n\n                _this.setState({\n                  date: unixTimeStamp\n                });\n\n                Edate = _this.state.date;\n                ipfs.add(_this.state.buffer, function (error, result) {\n                  console.log('Ipfs result', result[0]);\n\n                  _this.setState({\n                    hash: result[0].hash\n                  });\n\n                  if (error) {\n                    console.error(error);\n                    return;\n                  }\n                  /*\r\n                   this.state.contract.methods.set(result[0].hash).send({ from: this.state.account }).then((r) => {\r\n                     return this.setState({ memeHash: result[0].hash }),this.setState({ useraccount: useraccount })\r\n                     ,this.setState({ name: name }),this.setState({ roll: roll }),this.setState({ key: key })\r\n                     ,this.setState({ hash: result[0].hash })\r\n                   })\r\n                   */\n\n\n                  _this.state.contract.methods.CreateUser(Vname, roll, Edate, result[0].hash).send({\n                    from: _this.state.account\n                  }).then(function (r) {});\n\n                  testing();\n                  setTimeout(function () {\n                    return window.alert('Student Info Added Successfully!!');\n                  }, 15000);\n                });\n\n                testing =\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee4() {\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            try {\n                              console.log('Confirming....3');\n                            } catch (e) {\n                              console.error(e);\n                            }\n\n                          case 1:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function testing() {\n                    return _ref2.apply(this, arguments);\n                  };\n                }(); //console.log(this.state.useraccount)\n\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      showHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null,\n      name: null,\n      hash: null,\n      roll: null,\n      user: null,\n      date: null,\n      CDate: null\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.ChangeDoc = _this.ChangeDoc.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.onSubmit3 = this.onSubmit3.bind(this);\n\n    return _this;\n  }\n\n  _createClass(Notice, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"mt-5 mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Admin\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"select\", {\n        name: \"Doctype\",\n        onChange: this.ChangeDoc,\n        className: \"text-center mb-2 mr-auto ml-auto\",\n        style: {\n          fontSize: '30px',\n          width: '400px',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"/Notice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \" Notice \"), React.createElement(\"option\", {\n        value: \"/Admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Student Certificate \")), React.createElement(\"hr\", {\n        style: {\n          color: '#000000',\n          backgroundColor: '#000000',\n          height: .5,\n          borderColor: '#000000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        className: \"mb-5\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Notice No :\"), React.createElement(\"input\", {\n        className: \"ml-3\",\n        type: \"text\",\n        name: \"roll\",\n        placeholder: \"Enter Student Roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Expiration :\"), React.createElement(\"input\", {\n        className: \"ml-3\",\n        min: this.state.CDate,\n        type: \"date\",\n        name: \"date\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"File : \")), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        style: {\n          backgroundColor: '#00A884'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        style: {\n          color: '#000000',\n          backgroundColor: '#000000',\n          height: .5,\n          borderColor: '#000000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Notice;\n}(Component);\n\nexport default Notice;","map":{"version":3,"sources":["C:\\Users\\Ayon\\Desktop\\Thesis\\Project\\src\\components\\Notice.js"],"names":["React","Component","useState","Web3","DatePicker","Link","useNavigate","Authenticate","ipfsClient","require","projectId","projectSecret","auth","Buffer","from","toString","ipfs","host","port","protocol","headers","authorization","Notice","loadWeb3","loadBlockchainData","setState","CDate","Date","getFullYear","getMonth","getDate","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","account","net","getId","networkId","networkData","networks","contract","Contract","abi","address","props","ChangeDoc","event","preventDefault","link","target","value","location","handleChange","date","console","log","state","unixTimeStamp","Math","floor","getTime","captureFile","file","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","result","onSubmit","Vname","name","roll","Edate","add","error","hash","methods","CreateUser","send","then","r","testing","setTimeout","e","showHash","user","bind","fontSize","width","fontWeight","color","backgroundColor","height","borderColor"],"mappings":"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","sourcesContent":["import React, { Component, useState} from 'react';\r\nimport Web3 from 'web3';\r\nimport DatePicker from 'react-date-picker';\r\nimport {Link , useNavigate}  from \"react-router-dom\";\r\nimport './App.css';\r\nimport Authenticate from '../abis/Authenticate.json';\r\n\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst projectId = '2H7jMnviMZjZB4fq4w0leaswjCQ';\r\nconst projectSecret = 'e508e5b9f5e92b15c0f02a871e4b5524';\r\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' ,headers: {authorization: auth,},}) // leaving out the arguments will default to these values\r\n\r\n\r\n\r\nclass Notice extends Component {\r\n    async componentWillMount() {\r\n        await this.loadWeb3()\r\n        await this.loadBlockchainData()\r\n        this.setState({CDate : `${new Date().getFullYear()}-${new Date().getMonth()+1}-${new Date().getDate()}`})\r\n        /*\r\n        const accounts = await window.web3.eth.getAccounts()\r\n        console.log(accounts)\r\n        const contract = await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address)\r\n        console.log(contract)\r\n        const ca = await contract.methods.CAaddress().call()\r\n        console.log(ca)\r\n        console.log(await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address).methods.CAaddress(accounts[0]).call())\r\n        */\r\n      }\r\n    \r\n      async loadWeb3() {\r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum)\r\n          await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n        }\r\n      }\r\n    \r\n      async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        // Load account\r\n        const accounts = await web3.eth.getAccounts()\r\n        this.setState({ account: accounts[0] })\r\n        //this.setState({ useraccount: accounts[0] })\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Authenticate.networks[networkId]\r\n    \r\n        /* if(await this.state.contract.methods.UserInfo(this.state.useraccount).call()){\r\n         console.log(await this.state.contract.methods.UserInfo(this.state.useraccount).call())\r\n         }\r\n         if(this.state.useraccount){\r\n           const memeHash = await this.state.contract.methods.UserInfo(this.state.useraccount).call()\r\n         console.log(memeHash)}\r\n        */\r\n    \r\n    \r\n        if (networkData) {\r\n          const contract = web3.eth.Contract(Authenticate.abi, networkData.address)\r\n          this.setState({ contract })\r\n          //const memeHash = await contract.methods.get().call()\r\n          //this.setState({ memeHash })\r\n        } else {\r\n          window.alert('Smart contract not deployed to detected network.')\r\n        }\r\n      }\r\n\r\n      constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n          showHash: '',\r\n          contract: null,\r\n          web3: null,\r\n          buffer: null,\r\n          account: null,\r\n          name: null,\r\n          hash: null,\r\n          roll: null,\r\n          user: null,\r\n          date: null,\r\n          CDate : null\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.ChangeDoc = this.ChangeDoc.bind(this);\r\n        //this.onSubmit3 = this.onSubmit3.bind(this);\r\n    \r\n      }\r\n      ChangeDoc = (event) => {\r\n        event.preventDefault()\r\n        var link = event.target.value\r\n        window.location = link\r\n      }\r\n\r\n      handleChange = (event) => {\r\n        event.preventDefault()\r\n        var date = event.target.value\r\n        console.log(date)\r\n        // var currentDate = `${new Date().getFullYear()}-${new Date().getMonth()+1}-${new Date().getDate()}`\r\n        // console.log(currentDate)\r\n        console.log(this.state.CDate)\r\n        date = new Date(date);\r\n        //console.log('date', Math.floor(date.getTime() / 1000))\r\n          \r\n        var unixTimeStamp = Math.floor(date.getTime() / 1000);\r\n        \r\n        this.setState({date: unixTimeStamp})\r\n        \r\n        console.log(`${unixTimeStamp}`)\r\n        //console.log(this.state.date)\r\n        //console.log('name1', event.target.name1.value)\r\n      }\r\n    \r\n      captureFile = (event) => {\r\n        event.preventDefault()\r\n        const file = event.target.files[0]\r\n        const reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n        reader.onloadend = () => {\r\n          this.setState({ buffer: Buffer(reader.result) })\r\n          console.log('buffer', this.state.buffer)\r\n        }\r\n      }\r\n    \r\n      onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        console.log(\"Submitting file to ipfs...\")\r\n        const Vname = event.target.name.value\r\n        const roll = event.target.roll.value\r\n        this.setState({ name: Vname })\r\n        this.setState({ roll: roll })\r\n\r\n\r\n        var date = event.target.date.value\r\n        date = new Date(date);\r\n        var unixTimeStamp = Math.floor(date.getTime() / 1000);\r\n        this.setState({date: unixTimeStamp})\r\n        const Edate = this.state.date\r\n\r\n        ipfs.add(this.state.buffer, (error, result) => {\r\n          console.log('Ipfs result', result[0])\r\n          this.setState({ hash: result[0].hash })\r\n          if (error) {\r\n            console.error(error)\r\n            return\r\n          }\r\n          /*\r\n           this.state.contract.methods.set(result[0].hash).send({ from: this.state.account }).then((r) => {\r\n             return this.setState({ memeHash: result[0].hash }),this.setState({ useraccount: useraccount })\r\n             ,this.setState({ name: name }),this.setState({ roll: roll }),this.setState({ key: key })\r\n             ,this.setState({ hash: result[0].hash })\r\n           })\r\n           */\r\n          this.state.contract.methods.CreateUser(Vname, roll,Edate, result[0].hash).send({ from: this.state.account }).then((r) => {\r\n            \r\n          })\r\n          testing();\r\n          setTimeout(() => window.alert('Student Info Added Successfully!!'), 15000)\r\n          \r\n        })\r\n        const testing = async () => {\r\n          try {\r\n            console.log('Confirming....3')\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n        };\r\n        //console.log(this.state.useraccount)\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"mt-5 mr-auto ml-auto\" >Admin</h1>\r\n                    <p>&nbsp;</p>\r\n                    <select name=\"Doctype\" onChange={this.ChangeDoc} className='text-center mb-2 mr-auto ml-auto' style={{fontSize: '30px', width : '400px' ,fontWeight: 'bold'} }>\r\n                        <option value=\"/Notice\"> Notice </option>\r\n                        <option value=\"/Admin\">Student Certificate </option>\r\n                    </select>\r\n                    <hr style={{\r\n                    color: '#000000',\r\n                    backgroundColor: '#000000',\r\n                    height: .5,\r\n                    borderColor: '#000000'\r\n                    }} />\r\n                    <p><br></br></p>\r\n\r\n                    <form className=\"mb-5\" onSubmit={this.onSubmit}>\r\n\r\n                    {/* <label>\r\n                        <b>Versity Name :</b>\r\n                        <input className=\"ml-3\" type=\"text\" name=\"name1\" placeholder=\"Enter Versity Name\" />\r\n\r\n                    </label> */}\r\n\r\n                    <label>\r\n                        <b>Notice No :</b>\r\n                        <input className=\"ml-3\" type=\"text\" name=\"roll\" placeholder=\"Enter Student Roll\" />\r\n\r\n                    </label>\r\n                    <p><br></br></p>\r\n                    \r\n                    <label>\r\n                      <b>Expiration :</b>\r\n                      <input className=\"ml-3\" min={this.state.CDate} type=\"date\" name=\"date\" onChange={this.handleChange}/>\r\n                    </label>\r\n                    <p><br></br></p>\r\n                    \r\n                    <p><b>File : </b></p>\r\n                    <input type='file' onChange={this.captureFile} />\r\n                    <p><br></br></p>\r\n\r\n                    <input type='submit' style={{ backgroundColor: '#00A884' }} />\r\n                    <p><br></br></p>\r\n                    \r\n                    </form>\r\n\r\n\r\n                    <hr style={{\r\n                    color: '#000000',\r\n                    backgroundColor: '#000000',\r\n                    height: .5,\r\n                    borderColor: '#000000'\r\n                    }} />\r\n                    <p><br></br></p>\r\n            </div>\r\n            );\r\n  }\r\n}\r\n\r\nexport default Notice;"]},"metadata":{},"sourceType":"module"}