{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\src\\\\components\\\\ProtectedRoutes.jsx\";\nimport React, { Component } from 'react';\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport Web3 from 'web3';\nimport Authenticate from '../abis/Authenticate.json';\nimport App from './App';\n\nvar useAuth = function useAuth() {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n    window.ethereum.enable();\n  } else if (window.web3) {\n    window.web3 = new Web3(window.web3.currentProvider);\n  } else {\n    window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n  }\n\n  var web3 = window.web3;\n  var accounts = web3.eth.getAccounts();\n  var networkId = web3.eth.net.getId();\n  var networkData = Authenticate.networks[networkId];\n  var contract = web3.eth.Contract(Authenticate.abi, networkData.address);\n  var CAaddress = contract.methods.CAaddress().call({\n    from: accounts[0]\n  });\n\n  for (var i = 0; i < CAaddress.length; i++) {\n    if (CAaddress[i] === accounts[0]) {\n      console.log(accounts[0]);\n      console.log(CAaddress); //return true;\n    }\n  }\n\n  return false;\n};\n\nvar ProtectedRoutes = function ProtectedRoutes() {\n  var isAuth = useAuth();\n  console.log(isAuth);\n  return isAuth ? React.createElement(Outlet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : React.createElement(Navigate, {\n    to: \"/Restrict\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n};\n\nexport default ProtectedRoutes;","map":{"version":3,"sources":["C:\\Users\\Ayon\\Desktop\\Thesis\\Project\\src\\components\\ProtectedRoutes.jsx"],"names":["React","Component","Navigate","Outlet","Web3","Authenticate","App","useAuth","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","networkId","net","getId","networkData","networks","contract","Contract","abi","address","CAaddress","methods","call","from","i","length","console","log","ProtectedRoutes","isAuth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,kBAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,IAAMC,OAAO,GAAI,SAAXA,OAAW,GAAM;AACrB,MAAIC,MAAM,CAACC,QAAX,EAAqB;AACnBD,IAAAA,MAAM,CAACE,IAAP,GAAc,IAAIN,IAAJ,CAASI,MAAM,CAACC,QAAhB,CAAd;AACAD,IAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB;AACD,GAHD,MAIK,IAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,IAAAA,MAAM,CAACE,IAAP,GAAc,IAAIN,IAAJ,CAASI,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,GAFI,MAGA;AACHJ,IAAAA,MAAM,CAACK,KAAP,CAAa,qEAAb;AACD;;AACD,MAAMH,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,MAAMI,QAAQ,GAAIJ,IAAI,CAACK,GAAL,CAASC,WAAT,EAAlB;AACA,MAAMC,SAAS,GAAIP,IAAI,CAACK,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAnB;AACA,MAAMC,WAAW,GAAGf,YAAY,CAACgB,QAAb,CAAsBJ,SAAtB,CAApB;AACA,MAAMK,QAAQ,GAAGZ,IAAI,CAACK,GAAL,CAASQ,QAAT,CAAkBlB,YAAY,CAACmB,GAA/B,EAAoCJ,WAAW,CAACK,OAAhD,CAAjB;AAEA,MAAMC,SAAS,GAAIJ,QAAQ,CAACK,OAAT,CAAiBD,SAAjB,GAA6BE,IAA7B,CAAkC;AAACC,IAAAA,IAAI,EAAEf,QAAQ,CAAC,CAAD;AAAf,GAAlC,CAAnB;;AAEA,OAAK,IAAIgB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGJ,SAAS,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAGJ,SAAS,CAACI,CAAD,CAAT,KAAehB,QAAQ,CAAC,CAAD,CAA1B,EAA8B;AAC5BkB,MAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAQ,CAAC,CAAD,CAApB;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ,EAF4B,CAG5B;AACD;AACF;;AACD,SAAO,KAAP;AACD,CA3BD;;AA6BA,IAAMQ,eAAe,GAAI,SAAnBA,eAAmB,GAAM;AAC7B,MAAMC,MAAM,GAAI5B,OAAO,EAAvB;AACAyB,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACA,SAAOA,MAAM,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B;AACD,CAJD;;AAMA,eAAeD,eAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\nimport Web3 from 'web3';\r\nimport Authenticate from '../abis/Authenticate.json';\r\nimport App from './App';\r\n\r\nconst useAuth =  () => {\r\n  if (window.ethereum) {\r\n    window.web3 = new Web3(window.ethereum)\r\n    window.ethereum.enable()\r\n  }\r\n  else if (window.web3) {\r\n    window.web3 = new Web3(window.web3.currentProvider)\r\n  }\r\n  else {\r\n    window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n  }\r\n  const web3 = window.web3\r\n  const accounts =  web3.eth.getAccounts()\r\n  const networkId =  web3.eth.net.getId()\r\n  const networkData = Authenticate.networks[networkId]\r\n  const contract = web3.eth.Contract(Authenticate.abi, networkData.address)\r\n\r\n  const CAaddress =  contract.methods.CAaddress().call({from: accounts[0],});\r\n  \r\n  for (var i=0; i < CAaddress.length; i++) {\r\n    if(CAaddress[i]===accounts[0]){\r\n      console.log(accounts[0])\r\n      console.log(CAaddress)\r\n      //return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst ProtectedRoutes =  () => {\r\n  const isAuth =  useAuth();\r\n  console.log(isAuth)\r\n  return isAuth ? <Outlet /> : <Navigate to=\"/Restrict\" />;\r\n};\r\n\r\nexport default ProtectedRoutes;"]},"metadata":{},"sourceType":"module"}