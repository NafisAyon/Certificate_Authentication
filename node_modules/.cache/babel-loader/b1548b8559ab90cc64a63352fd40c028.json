{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\src\\\\components\\\\ProtectedRoutes.jsx\";\nimport React, { Component } from 'react';\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport Web3 from 'web3';\nimport Authenticate from '../abis/Authenticate.json';\nimport App from './App';\n\nvar useAuth =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var web3, accounts, networkId, networkData, contract, CAaddress, i;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context.next = 6;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              window.web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n          case 7:\n            web3 = window.web3;\n            _context.next = 10;\n            return web3.eth.getAccounts();\n\n          case 10:\n            accounts = _context.sent;\n            _context.next = 13;\n            return web3.eth.net.getId();\n\n          case 13:\n            networkId = _context.sent;\n            networkData = Authenticate.networks[networkId];\n            contract = web3.eth.Contract(Authenticate.abi, networkData.address);\n            _context.next = 18;\n            return contract.methods.CAaddress().call({\n              from: accounts[0]\n            });\n\n          case 18:\n            CAaddress = _context.sent;\n\n            for (i = 0; i < CAaddress.length; i++) {\n              if (CAaddress[i] == accounts[0]) {//return true;\n              }\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function useAuth() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar ProtectedRoutes = function ProtectedRoutes() {\n  var isAuth = useAuth();\n  return isAuth ? React.createElement(Outlet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }) : React.createElement(Navigate, {\n    to: \"/Restrict\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  });\n};\n\nexport default ProtectedRoutes;","map":{"version":3,"sources":["C:\\Users\\Ayon\\Desktop\\Thesis\\Project\\src\\components\\ProtectedRoutes.jsx"],"names":["React","Component","Navigate","Outlet","Web3","Authenticate","App","useAuth","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","contract","Contract","abi","address","methods","CAaddress","call","from","i","length","ProtectedRoutes","isAuth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,kBAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,IAAMC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACVC,MAAM,CAACC,QADG;AAAA;AAAA;AAAA;;AAEZD,YAAAA,MAAM,CAACE,IAAP,GAAc,IAAIN,IAAJ,CAASI,MAAM,CAACC,QAAhB,CAAd;AAFY;AAAA,mBAGND,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAHM;;AAAA;AAAA;AAAA;;AAAA;AAKT,gBAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,cAAAA,MAAM,CAACE,IAAP,GAAc,IAAIN,IAAJ,CAASI,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,aAFI,MAGA;AACHJ,cAAAA,MAAM,CAACK,KAAP,CAAa,qEAAb;AACD;;AAVa;AAWRH,YAAAA,IAXQ,GAWDF,MAAM,CAACE,IAXN;AAAA;AAAA,mBAYSA,IAAI,CAACI,GAAL,CAASC,WAAT,EAZT;;AAAA;AAYRC,YAAAA,QAZQ;AAAA;AAAA,mBAaUN,IAAI,CAACI,GAAL,CAASG,GAAT,CAAaC,KAAb,EAbV;;AAAA;AAaRC,YAAAA,SAbQ;AAcRC,YAAAA,WAdQ,GAcMf,YAAY,CAACgB,QAAb,CAAsBF,SAAtB,CAdN;AAeRG,YAAAA,QAfQ,GAeGZ,IAAI,CAACI,GAAL,CAASS,QAAT,CAAkBlB,YAAY,CAACmB,GAA/B,EAAoCJ,WAAW,CAACK,OAAhD,CAfH;AAAA;AAAA,mBAiBUH,QAAQ,CAACI,OAAT,CAAiBC,SAAjB,GAA6BC,IAA7B,CAAkC;AAACC,cAAAA,IAAI,EAAEb,QAAQ,CAAC,CAAD;AAAf,aAAlC,CAjBV;;AAAA;AAiBRW,YAAAA,SAjBQ;;AAmBd,iBAASG,CAAT,GAAW,CAAX,EAAcA,CAAC,GAAGH,SAAS,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,kBAAGH,SAAS,CAACG,CAAD,CAAT,IAAcd,QAAQ,CAAC,CAAD,CAAzB,EAA6B,CAC3B;AACD;AACF;;AAvBa,6CAwBP,KAxBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPT,OAAO;AAAA;AAAA;AAAA,GAAb;;AA2BA,IAAMyB,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAMC,MAAM,GAAG1B,OAAO,EAAtB;AACA,SAAO0B,MAAM,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B;AACD,CAHD;;AAKA,eAAeD,eAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\nimport Web3 from 'web3';\r\nimport Authenticate from '../abis/Authenticate.json';\r\nimport App from './App';\r\n\r\nconst useAuth = async () => {\r\n  if (window.ethereum) {\r\n    window.web3 = new Web3(window.ethereum)\r\n    await window.ethereum.enable()\r\n  }\r\n  else if (window.web3) {\r\n    window.web3 = new Web3(window.web3.currentProvider)\r\n  }\r\n  else {\r\n    window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n  }\r\n  const web3 = window.web3\r\n  const accounts = await web3.eth.getAccounts()\r\n  const networkId = await web3.eth.net.getId()\r\n  const networkData = Authenticate.networks[networkId]\r\n  const contract = web3.eth.Contract(Authenticate.abi, networkData.address)\r\n\r\n  const CAaddress = await contract.methods.CAaddress().call({from: accounts[0],});\r\n\r\n  for (var i=0; i < CAaddress.length; i++) {\r\n    if(CAaddress[i]==accounts[0]){\r\n      //return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst ProtectedRoutes = () => {\r\n  const isAuth = useAuth();\r\n  return isAuth ? <Outlet /> : <Navigate to=\"/Restrict\" />;\r\n};\r\n\r\nexport default ProtectedRoutes;"]},"metadata":{},"sourceType":"module"}