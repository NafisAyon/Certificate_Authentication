{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\src\\\\components\\\\Validation.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Authenticate from '../abis/Authenticate.json';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar projectId = '2H7jMnviMZjZB4fq4w0leaswjCQ';\nvar projectSecret = 'e508e5b9f5e92b15c0f02a871e4b5524';\nvar auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  headers: {\n    authorization: auth\n  }\n}); // leaving out the arguments will default to these values\n\nvar Validation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Validation, _Component);\n\n  _createClass(Validation, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, contract;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                }); //this.setState({ useraccount: accounts[0] })\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Authenticate.networks[networkId];\n                /* if(await this.state.contract.methods.UserInfo(this.state.useraccount).call()){\r\n                 console.log(await this.state.contract.methods.UserInfo(this.state.useraccount).call())\r\n                 }\r\n                 if(this.state.useraccount){\r\n                   const memeHash = await this.state.contract.methods.UserInfo(this.state.useraccount).call()\r\n                 console.log(memeHash)}\r\n                */\n\n                if (networkData) {\n                  contract = web3.eth.Contract(Authenticate.abi, networkData.address);\n                  this.setState({\n                    contract: contract\n                  }); //const memeHash = await contract.methods.get().call()\n                  //this.setState({ memeHash })\n                } else {\n                  window.alert('Smart contract not deployed to detected network.');\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"showValidemsg\",\n    value: function () {\n      var _showValidemsg = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.t0 = console;\n                _context4.next = 3;\n                return this.state.contract.methods.CheckCertificate().call();\n\n              case 3:\n                _context4.t1 = _context4.sent;\n\n                _context4.t0.log.call(_context4.t0, 'Certificate Status :', _context4.t1);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function showValidemsg() {\n        return _showValidemsg.apply(this, arguments);\n      }\n\n      return showValidemsg;\n    }()\n  }, {\n    key: \"showValidemsg2\",\n    value: function () {\n      var _showValidemsg2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.t0 = console;\n                _context5.next = 3;\n                return this.state.contract.methods.CheckCertificate3(this.state.hash, this.state.name).call();\n\n              case 3:\n                _context5.t1 = _context5.sent;\n\n                _context5.t0.log.call(_context5.t0, 'Certificate Status :', _context5.t1);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function showValidemsg2() {\n        return _showValidemsg2.apply(this, arguments);\n      }\n\n      return showValidemsg2;\n    }()\n  }]);\n\n  function Validation(props) {\n    var _this;\n\n    _classCallCheck(this, Validation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Validation).call(this, props));\n\n    _this.captureFile2 = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.onSubmit3 = function (event) {\n      event.preventDefault();\n      console.log(\"Checking File...\");\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('Ipfs result', result); //this.setState({ hash: result[0].hash })\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        _this.state.contract.methods.CurrentHash(result[0].hash).send({\n          from: _this.state.account\n        }).then(function (r) {\n          return _this.setState({\n            hash: result[0].hash\n          });\n        });\n\n        setTimeout(function () {\n          return _this.showValidemsg();\n        }, 15000);\n      }); //console.log(this.state.useraccount)\n    };\n\n    _this.captureFile3 = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.onSubmit4 =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(event) {\n        var Vname, valid;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                event.preventDefault();\n                console.log(\"Checking File...\");\n                Vname = event.target.name.value;\n                ipfs.add(_this.state.buffer, function (error, result) {\n                  console.log('Ipfs result', result); //this.setState({ hash: result[0].hash })\n\n                  if (error) {\n                    console.error(error);\n                    return;\n                  }\n\n                  _this.setState({\n                    hash: result[0].hash\n                  });\n\n                  valid(); // this.state.contract.methods.CurrentHashandVN(result[0].hash,Vname).send({ from: this.state.account }).then((r) => {\n                  //   return this.setState({ hash: result[0].hash })\n                  // })\n                  //setTimeout(() => this.showValidemsg2(), 15000)\n                  //console.log('Certificate Status :', await this.state.contract.methods.CheckCertificate2().call())\n                  //setTimeout(() => console.log(), 15000)\n                }); //console.log(this.state.useraccount)\n\n                valid =\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee6() {\n                    var accountType;\n                    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            _context6.prev = 0;\n                            console.log('Hash:', _this.state.hash);\n                            _context6.next = 4;\n                            return _this.state.contract.methods.CheckCertificate4(_this.state.hash, Vname).call({\n                              from: _this.state.account\n                            });\n\n                          case 4:\n                            accountType = _context6.sent;\n                            console.log('account type:', accountType); //setState({ ...state, signedIn: true });\n\n                            _context6.next = 11;\n                            break;\n\n                          case 8:\n                            _context6.prev = 8;\n                            _context6.t0 = _context6[\"catch\"](0);\n                            console.error(_context6.t0);\n\n                          case 11:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6, null, [[0, 8]]);\n                  }));\n\n                  return function valid() {\n                    return _ref2.apply(this, arguments);\n                  };\n                }(); // const valid = async () => {\n                //   try {\n                //     const accountType = await state.contract.methods.CheckCertificate4(this.state.hash,Vname).call({from: this.state.account,});\n                //     console.log('account type:', accountType);\n                //     //setState({ ...state, signedIn: true });\n                //   } catch (e) {\n                //     console.error(e);\n                //   }\n                // };\n\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      showHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null,\n      name: null,\n      hash: null,\n      roll: null,\n      user: null\n    };\n    _this.captureFile2 = _this.captureFile2.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit3 = _this.onSubmit3.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showValidemsg = _this.showValidemsg.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showValidemsg2 = _this.showValidemsg2.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.captureFile3 = _this.captureFile3.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit4 = _this.onSubmit4.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Validation, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"mt-5 mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Validation\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"form\", {\n        className: \"mb-5\",\n        onSubmit: this.onSubmit3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Certificate : \")), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        style: {\n          backgroundColor: '#00A884'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        style: {\n          color: '#000000',\n          backgroundColor: '#000000',\n          height: .5,\n          borderColor: '#000000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"mt-5 mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Validation 2\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"form\", {\n        className: \"mb-5\",\n        onSubmit: this.onSubmit4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Versity Name : \"), React.createElement(\"select\", {\n        name: \"name\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Select--\"), React.createElement(\"option\", {\n        value: \"Ahsanullah University\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Ahsanullah University\"))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Certificate : \")), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        style: {\n          backgroundColor: '#00A884'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        style: {\n          color: '#000000',\n          backgroundColor: '#000000',\n          height: .5,\n          borderColor: '#000000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Validation;\n}(Component);\n\nexport default Validation;","map":{"version":3,"sources":["C:\\Users\\Ayon\\Desktop\\Thesis\\Project\\src\\components\\Validation.js"],"names":["React","Component","Web3","Authenticate","ipfsClient","require","projectId","projectSecret","auth","Buffer","from","toString","ipfs","host","port","protocol","headers","authorization","Validation","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","contract","Contract","abi","address","console","state","methods","CheckCertificate","call","log","CheckCertificate3","hash","name","props","captureFile2","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","result","onSubmit3","add","error","CurrentHash","send","then","r","setTimeout","showValidemsg","captureFile3","onSubmit4","Vname","value","valid","CheckCertificate4","accountType","showHash","roll","user","bind","showValidemsg2","backgroundColor","color","height","borderColor","handleChange"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AACA,IAAMC,SAAS,GAAG,6BAAlB;AACA,IAAMC,aAAa,GAAG,kCAAtB;AACA,IAAMC,IAAI,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYJ,SAAS,GAAG,GAAZ,GAAkBC,aAA9B,EAA6CI,QAA7C,CAAsD,QAAtD,CAAxB;AACA,IAAMC,IAAI,GAAGR,UAAU,CAAC;AAAES,EAAAA,IAAI,EAAE,gBAAR;AAA0BC,EAAAA,IAAI,EAAE,IAAhC;AAAsCC,EAAAA,QAAQ,EAAE,OAAhD;AAAyDC,EAAAA,OAAO,EAAE;AAACC,IAAAA,aAAa,EAAET;AAAhB;AAAlE,CAAD,CAAvB,C,CAAoH;;IAE9GU,U;;;;;;;;;;;;;;;;uBAGI,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;qBAaFC,MAAM,CAACC,Q;;;;;AACTD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIrB,IAAJ,CAASmB,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AAEH,oBAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIrB,IAAJ,CAASmB,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,iBAFI,MAGA;AACHJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,qEAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIKH,gBAAAA,I,GAAOF,MAAM,CAACE,I,EACpB;;;uBACuBA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACN,qBAAKC,QAAL,CAAc;AAAEC,kBAAAA,OAAO,EAAEF,QAAQ,CAAC,CAAD;AAAnB,iBAAd,E,CACA;;;uBACwBN,IAAI,CAACI,GAAL,CAASK,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AACAC,gBAAAA,W,GAAchC,YAAY,CAACiC,QAAb,CAAsBF,SAAtB,C;AAEpB;;;;;;;;AASA,oBAAIC,WAAJ,EAAiB;AACTE,kBAAAA,QADS,GACEd,IAAI,CAACI,GAAL,CAASW,QAAT,CAAkBnC,YAAY,CAACoC,GAA/B,EAAoCJ,WAAW,CAACK,OAAhD,CADF;AAEf,uBAAKV,QAAL,CAAc;AAAEO,oBAAAA,QAAQ,EAARA;AAAF,mBAAd,EAFe,CAGf;AACA;AACD,iBALD,MAKO;AACLhB,kBAAAA,MAAM,CAACK,KAAP,CAAa,kDAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;+BAKDe,O;;uBAA0C,KAAKC,KAAL,CAAWL,QAAX,CAAoBM,OAApB,CAA4BC,gBAA5B,GAA+CC,IAA/C,E;;;;;6BAAlCC,G,oBAAI,sB;;;;;;;;;;;;;;;;;;;;;;;;;;+BAKZL,O;;uBAA0C,KAAKC,KAAL,CAAWL,QAAX,CAAoBM,OAApB,CAA4BI,iBAA5B,CAA8C,KAAKL,KAAL,CAAWM,IAAzD,EAA8D,KAAKN,KAAL,CAAWO,IAAzE,EAA+EJ,IAA/E,E;;;;;6BAAlCC,G,oBAAI,sB;;;;;;;;;;;;;;;;;;AAGd,sBAAYI,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;;AADiB,UAsBnBC,YAtBmB,GAsBJ,UAACC,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIpC,MAAM,CAACqC,UAAX,EAAf;AACAD,MAAAA,MAAM,CAACE,iBAAP,CAAyBL,IAAzB;;AACAG,MAAAA,MAAM,CAACG,SAAP,GAAmB,YAAM;AACvB,cAAK9B,QAAL,CAAc;AAAE+B,UAAAA,MAAM,EAAEpD,MAAM,CAACgD,MAAM,CAACK,MAAR;AAAhB,SAAd;;AACArB,QAAAA,OAAO,CAACK,GAAR,CAAY,QAAZ,EAAsB,MAAKJ,KAAL,CAAWmB,MAAjC;AACD,OAHD;AAID,KA/BkB;;AAAA,UAiCnBE,SAjCmB,GAiCP,UAACX,KAAD,EAAW;AACrBA,MAAAA,KAAK,CAACC,cAAN;AACAZ,MAAAA,OAAO,CAACK,GAAR,CAAY,kBAAZ;AACAlC,MAAAA,IAAI,CAACoD,GAAL,CAAS,MAAKtB,KAAL,CAAWmB,MAApB,EAA4B,UAACI,KAAD,EAAQH,MAAR,EAAmB;AAC7CrB,QAAAA,OAAO,CAACK,GAAR,CAAY,aAAZ,EAA2BgB,MAA3B,EAD6C,CAE7C;;AACA,YAAIG,KAAJ,EAAW;AACTxB,UAAAA,OAAO,CAACwB,KAAR,CAAcA,KAAd;AACA;AACD;;AACD,cAAKvB,KAAL,CAAWL,QAAX,CAAoBM,OAApB,CAA4BuB,WAA5B,CAAwCJ,MAAM,CAAC,CAAD,CAAN,CAAUd,IAAlD,EAAwDmB,IAAxD,CAA6D;AAAEzD,UAAAA,IAAI,EAAE,MAAKgC,KAAL,CAAWX;AAAnB,SAA7D,EAA2FqC,IAA3F,CAAgG,UAACC,CAAD,EAAO;AACrG,iBAAO,MAAKvC,QAAL,CAAc;AAAEkB,YAAAA,IAAI,EAAEc,MAAM,CAAC,CAAD,CAAN,CAAUd;AAAlB,WAAd,CAAP;AACD,SAFD;;AAGAsB,QAAAA,UAAU,CAAC;AAAA,iBAAM,MAAKC,aAAL,EAAN;AAAA,SAAD,EAA6B,KAA7B,CAAV;AAED,OAZD,EAHqB,CAgBrB;AACD,KAlDkB;;AAAA,UAoDnBC,YApDmB,GAoDJ,UAACpB,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIpC,MAAM,CAACqC,UAAX,EAAf;AACAD,MAAAA,MAAM,CAACE,iBAAP,CAAyBL,IAAzB;;AACAG,MAAAA,MAAM,CAACG,SAAP,GAAmB,YAAM;AACvB,cAAK9B,QAAL,CAAc;AAAE+B,UAAAA,MAAM,EAAEpD,MAAM,CAACgD,MAAM,CAACK,MAAR;AAAhB,SAAd;;AACArB,QAAAA,OAAO,CAACK,GAAR,CAAY,QAAZ,EAAsB,MAAKJ,KAAL,CAAWmB,MAAjC;AACD,OAHD;AAID,KA7DkB;;AAAA,UA+DnBY,SA/DmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BA+DP,kBAAOrB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACVA,gBAAAA,KAAK,CAACC,cAAN;AACAZ,gBAAAA,OAAO,CAACK,GAAR,CAAY,kBAAZ;AACM4B,gBAAAA,KAHI,GAGItB,KAAK,CAACG,MAAN,CAAaN,IAAb,CAAkB0B,KAHtB;AAKV/D,gBAAAA,IAAI,CAACoD,GAAL,CAAS,MAAKtB,KAAL,CAAWmB,MAApB,EAA4B,UAACI,KAAD,EAAQH,MAAR,EAAmB;AAC7CrB,kBAAAA,OAAO,CAACK,GAAR,CAAY,aAAZ,EAA2BgB,MAA3B,EAD6C,CAE7C;;AACA,sBAAIG,KAAJ,EAAW;AACTxB,oBAAAA,OAAO,CAACwB,KAAR,CAAcA,KAAd;AACA;AACD;;AACD,wBAAKnC,QAAL,CAAc;AAAEkB,oBAAAA,IAAI,EAAEc,MAAM,CAAC,CAAD,CAAN,CAAUd;AAAlB,mBAAd;;AACA4B,kBAAAA,KAAK,GARwC,CAS7C;AACA;AACA;AACA;AACA;AACA;AAED,iBAhBD,EALU,CAsBV;;AAEMA,gBAAAA,KAxBI;AAAA;AAAA;AAAA;AAAA;AAAA,2CAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVnC,4BAAAA,OAAO,CAACK,GAAR,CAAY,OAAZ,EAAoB,MAAKJ,KAAL,CAAWM,IAA/B;AAFU;AAAA,mCAGgB,MAAKN,KAAL,CAAWL,QAAX,CAAoBM,OAApB,CAA4BkC,iBAA5B,CAA8C,MAAKnC,KAAL,CAAWM,IAAzD,EAA8D0B,KAA9D,EAAqE7B,IAArE,CAA0E;AAACnC,8BAAAA,IAAI,EAAE,MAAKgC,KAAL,CAAWX;AAAlB,6BAA1E,CAHhB;;AAAA;AAGJ+C,4BAAAA,WAHI;AAIVrC,4BAAAA,OAAO,CAACK,GAAR,CAAY,eAAZ,EAA6BgC,WAA7B,EAJU,CAKV;;AALU;AAAA;;AAAA;AAAA;AAAA;AAOVrC,4BAAAA,OAAO,CAACwB,KAAR;;AAPU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAxBJ;;AAAA,kCAwBJW,KAxBI;AAAA;AAAA;AAAA,qBAqCV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA7CU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA/DO;;AAAA;AAAA;AAAA;AAAA;;AAGjB,UAAKlC,KAAL,GAAa;AACXqC,MAAAA,QAAQ,EAAE,EADC;AAEX1C,MAAAA,QAAQ,EAAE,IAFC;AAGXd,MAAAA,IAAI,EAAE,IAHK;AAIXsC,MAAAA,MAAM,EAAE,IAJG;AAKX9B,MAAAA,OAAO,EAAE,IALE;AAMXkB,MAAAA,IAAI,EAAE,IANK;AAOXD,MAAAA,IAAI,EAAE,IAPK;AAQXgC,MAAAA,IAAI,EAAE,IARK;AASXC,MAAAA,IAAI,EAAE;AATK,KAAb;AAWA,UAAK9B,YAAL,GAAoB,MAAKA,YAAL,CAAkB+B,IAAlB,uDAApB;AACA,UAAKnB,SAAL,GAAiB,MAAKA,SAAL,CAAemB,IAAf,uDAAjB;AACA,UAAKX,aAAL,GAAqB,MAAKA,aAAL,CAAmBW,IAAnB,uDAArB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,uDAAtB;AACA,UAAKV,YAAL,GAAoB,MAAKA,YAAL,CAAkBU,IAAlB,uDAApB;AACA,UAAKT,SAAL,GAAiB,MAAKA,SAAL,CAAeS,IAAf,uDAAjB;AAnBiB;AAqBlB;;;;6BA2FQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADN,EAEU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFV,EAGU;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAE,KAAKnB,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAH,CAFF,EAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKZ,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CAJF,EAKE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAE;AAAEiC,UAAAA,eAAe,EAAE;AAAnB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CANF,CAHV,EAaU;AAAI,QAAA,KAAK,EAAE;AACTC,UAAAA,KAAK,EAAE,SADE;AAETD,UAAAA,eAAe,EAAE,SAFR;AAGTE,UAAAA,MAAM,EAAE,EAHC;AAITC,UAAAA,WAAW,EAAE;AAJJ,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbV,EAqBU;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBArBV,EAsBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBV,EAuBU;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAE,KAAKd,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,QAAQ,EAAE,KAAKe,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAQ,QAAA,KAAK,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,CAFF,CADJ,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CARF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAH,CAXF,EAYE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKhB,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CAbF,EAcE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAE;AAAEY,UAAAA,eAAe,EAAE;AAAnB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CAfF,CAvBV,EA0CU;AAAI,QAAA,KAAK,EAAE;AACTC,UAAAA,KAAK,EAAE,SADE;AAETD,UAAAA,eAAe,EAAE,SAFR;AAGTE,UAAAA,MAAM,EAAE,EAHC;AAITC,UAAAA,WAAW,EAAE;AAJJ,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1CV,EAgDU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CAhDV,CADF;AAoDD;;;;EAxOsBtF,S;;AA2OzB,eAAeiB,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\nimport Authenticate from '../abis/Authenticate.json';\r\n\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst projectId = '2H7jMnviMZjZB4fq4w0leaswjCQ';\r\nconst projectSecret = 'e508e5b9f5e92b15c0f02a871e4b5524';\r\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' ,headers: {authorization: auth,},}) // leaving out the arguments will default to these values\r\n\r\nclass Validation extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n    /*\r\n    const accounts = await window.web3.eth.getAccounts()\r\n    console.log(accounts)\r\n    const contract = await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address)\r\n    console.log(contract)\r\n    const ca = await contract.methods.CAaddress().call()\r\n    console.log(ca)\r\n    console.log(await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address).methods.CAaddress(accounts[0]).call())\r\n    */\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    //this.setState({ useraccount: accounts[0] })\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = Authenticate.networks[networkId]\r\n\r\n    /* if(await this.state.contract.methods.UserInfo(this.state.useraccount).call()){\r\n     console.log(await this.state.contract.methods.UserInfo(this.state.useraccount).call())\r\n     }\r\n     if(this.state.useraccount){\r\n       const memeHash = await this.state.contract.methods.UserInfo(this.state.useraccount).call()\r\n     console.log(memeHash)}\r\n    */\r\n\r\n\r\n    if (networkData) {\r\n      const contract = web3.eth.Contract(Authenticate.abi, networkData.address)\r\n      this.setState({ contract })\r\n      //const memeHash = await contract.methods.get().call()\r\n      //this.setState({ memeHash })\r\n    } else {\r\n      window.alert('Smart contract not deployed to detected network.')\r\n    }\r\n  }\r\n\r\n  async showValidemsg() {\r\n\r\n    console.log('Certificate Status :', await this.state.contract.methods.CheckCertificate().call())\r\n  }\r\n\r\n  async showValidemsg2() {\r\n\r\n    console.log('Certificate Status :', await this.state.contract.methods.CheckCertificate3(this.state.hash,this.state.name).call())\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      showHash: '',\r\n      contract: null,\r\n      web3: null,\r\n      buffer: null,\r\n      account: null,\r\n      name: null,\r\n      hash: null,\r\n      roll: null,\r\n      user: null\r\n    }\r\n    this.captureFile2 = this.captureFile2.bind(this);\r\n    this.onSubmit3 = this.onSubmit3.bind(this);\r\n    this.showValidemsg = this.showValidemsg.bind(this);\r\n    this.showValidemsg2 = this.showValidemsg2.bind(this);\r\n    this.captureFile3 = this.captureFile3.bind(this);\r\n    this.onSubmit4 = this.onSubmit4.bind(this);\r\n\r\n  }\r\n  captureFile2 = (event) => {\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => {\r\n      this.setState({ buffer: Buffer(reader.result) })\r\n      console.log('buffer', this.state.buffer)\r\n    }\r\n  }\r\n\r\n  onSubmit3 = (event) => {\r\n    event.preventDefault()\r\n    console.log(\"Checking File...\")\r\n    ipfs.add(this.state.buffer, (error, result) => {\r\n      console.log('Ipfs result', result)\r\n      //this.setState({ hash: result[0].hash })\r\n      if (error) {\r\n        console.error(error)\r\n        return\r\n      }\r\n      this.state.contract.methods.CurrentHash(result[0].hash).send({ from: this.state.account }).then((r) => {\r\n        return this.setState({ hash: result[0].hash })\r\n      })\r\n      setTimeout(() => this.showValidemsg(), 15000)\r\n\r\n    })\r\n    //console.log(this.state.useraccount)\r\n  }\r\n\r\n  captureFile3 = (event) => {\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => {\r\n      this.setState({ buffer: Buffer(reader.result) })\r\n      console.log('buffer', this.state.buffer)\r\n    }\r\n  }\r\n\r\n  onSubmit4 = async (event) => {\r\n    event.preventDefault()\r\n    console.log(\"Checking File...\")\r\n    const Vname = event.target.name.value\r\n    \r\n    ipfs.add(this.state.buffer, (error, result) => {\r\n      console.log('Ipfs result', result)\r\n      //this.setState({ hash: result[0].hash })\r\n      if (error) {\r\n        console.error(error)\r\n        return\r\n      }\r\n      this.setState({ hash: result[0].hash })\r\n      valid();\r\n      // this.state.contract.methods.CurrentHashandVN(result[0].hash,Vname).send({ from: this.state.account }).then((r) => {\r\n      //   return this.setState({ hash: result[0].hash })\r\n      // })\r\n      //setTimeout(() => this.showValidemsg2(), 15000)\r\n      //console.log('Certificate Status :', await this.state.contract.methods.CheckCertificate2().call())\r\n      //setTimeout(() => console.log(), 15000)\r\n\r\n    })\r\n    //console.log(this.state.useraccount)\r\n    \r\n    const valid = async () => {\r\n      try {\r\n        console.log('Hash:',this.state.hash);\r\n        const accountType = await this.state.contract.methods.CheckCertificate4(this.state.hash,Vname).call({from: this.state.account,});\r\n        console.log('account type:', accountType);\r\n        //setState({ ...state, signedIn: true });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n\r\n    \r\n\r\n    // const valid = async () => {\r\n    //   try {\r\n    //     const accountType = await state.contract.methods.CheckCertificate4(this.state.hash,Vname).call({from: this.state.account,});\r\n    //     console.log('account type:', accountType);\r\n    //     //setState({ ...state, signedIn: true });\r\n    //   } catch (e) {\r\n    //     console.error(e);\r\n    //   }\r\n    // };\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n            <h1 className=\"mt-5 mr-auto ml-auto\" >Validation</h1>\r\n                <p>&nbsp;</p>\r\n                <form className=\"mb-5\" onSubmit={this.onSubmit3}>\r\n\r\n                  <p><b>Certificate : </b></p>\r\n                  <input type='file' onChange={this.captureFile2} />\r\n                  <p><br></br></p>\r\n                  <input type='submit' style={{ backgroundColor: '#00A884' }} />\r\n                  <p><br></br></p>\r\n                </form>\r\n\r\n\r\n                <hr style={{\r\n                  color: '#000000',\r\n                  backgroundColor: '#000000',\r\n                  height: .5,\r\n                  borderColor: '#000000'\r\n                }} />\r\n\r\n\r\n                <h1 className=\"mt-5 mr-auto ml-auto\" >Validation 2</h1>\r\n                <p>&nbsp;</p>\r\n                <form className=\"mb-5\" onSubmit={this.onSubmit4}>\r\n                    <label>\r\n                      <b>Versity Name : </b>\r\n                      <select name=\"name\" onChange={this.handleChange}>\r\n                        <option value=\"\">Select--</option>\r\n                        <option value=\"Ahsanullah University\">Ahsanullah University</option>\r\n                      </select>\r\n                    </label>\r\n                  <p><br></br></p>\r\n\r\n\r\n                  <p><b>Certificate : </b></p>\r\n                  <input type='file' onChange={this.captureFile3} />\r\n                  <p><br></br></p>\r\n                  <input type='submit' style={{ backgroundColor: '#00A884' }} />\r\n                  <p><br></br></p>\r\n                </form>\r\n\r\n\r\n                <hr style={{\r\n                  color: '#000000',\r\n                  backgroundColor: '#000000',\r\n                  height: .5,\r\n                  borderColor: '#000000'\r\n                }} />\r\n                <p><br></br></p>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Validation;\r\n"]},"metadata":{},"sourceType":"module"}