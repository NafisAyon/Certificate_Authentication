{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ayon\\\\Desktop\\\\Thesis\\\\Project\\\\src\\\\components\\\\APanel.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport axios from 'axios';\nimport DatePicker from 'react-date-picker';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport './App.css';\nimport Authenticate from '../abis/Authenticate.json';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar projectId = '2H7jMnviMZjZB4fq4w0leaswjCQ';\nvar projectSecret = 'e508e5b9f5e92b15c0f02a871e4b5524';\nvar auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  headers: {\n    authorization: auth\n  }\n}); // leaving out the arguments will default to these values\n\nvar Table =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table, _Component);\n\n  function Table() {\n    _classCallCheck(this, Table);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Table).apply(this, arguments));\n  }\n\n  _createClass(Table, [{\n    key: \"render\",\n    value: function render() {\n      var heading = this.props.heading;\n      var body = this.props.body;\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, heading.map(function (head) {\n        return React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, head);\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, body.map(function (row) {\n        return React.createElement(TableRow, {\n          row: row,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Table;\n}(Component);\n\nvar TableRow =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(TableRow, _Component2);\n\n  function TableRow() {\n    _classCallCheck(this, TableRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableRow).apply(this, arguments));\n  }\n\n  _createClass(TableRow, [{\n    key: \"render\",\n    value: function render() {\n      var row = [this.props.row];\n      console.log(row);\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, row.map(function (val) {\n        return React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, val[0]);\n      }));\n    }\n  }]);\n\n  return TableRow;\n}(Component);\n\nvar APanel =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(APanel, _Component3);\n\n  _createClass(APanel, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var a;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n                this.setState({\n                  CDate: \"\".concat(new Date().getFullYear(), \"-\").concat(new Date().getMonth() + 1, \"-\").concat(new Date().getDate())\n                });\n                _context.next = 7;\n                return this.fetchData();\n\n              case 7:\n                a = _context.sent;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var Allusers, i;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.state.contract.methods.AllUser().call({\n                  from: this.state.account\n                });\n\n              case 2:\n                Allusers = _context2.sent;\n\n                for (i = 0; i < Allusers.length; i++) {\n                  Allusers[i][2] = \"\".concat(new Date(Allusers[i][2] * 1000).toLocaleDateString('en-GB'));\n                  Allusers[i][3] = \"\".concat(new Date(Allusers[i][3] * 1000).toLocaleDateString('en-GB'));\n                }\n\n                this.setState({\n                  Allusers: Allusers\n                });\n\n                for (i = 0; i < Allusers.length; i++) {\n                  Allusers[i] = [Allusers[i][0], Allusers[i][1], Allusers[i][2], Allusers[i][3], Allusers[i][4]];\n                }\n\n                this.setState({\n                  ArrayUser: Allusers\n                });\n                console.log(this.state.ArrayUser);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var web3, accounts, networkId, networkData, contract;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context4.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context4.sent;\n                this.setState({\n                  account: accounts[0]\n                }); //this.setState({ useraccount: accounts[0] })\n\n                _context4.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context4.sent;\n                networkData = Authenticate.networks[networkId];\n                /* if(await this.state.contract.methods.UserInfo(this.state.useraccount).call()){\r\n                 console.log(await this.state.contract.methods.UserInfo(this.state.useraccount).call())\r\n                 }\r\n                 if(this.state.useraccount){\r\n                   const memeHash = await this.state.contract.methods.UserInfo(this.state.useraccount).call()\r\n                 console.log(memeHash)}\r\n                */\n\n                if (networkData) {\n                  contract = web3.eth.Contract(Authenticate.abi, networkData.address);\n                  this.setState({\n                    contract: contract\n                  }); //const memeHash = await contract.methods.get().call()\n                  //this.setState({ memeHash })\n                } else {\n                  window.alert('Smart contract not deployed to detected network.');\n                }\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function APanel(props) {\n    var _this;\n\n    _classCallCheck(this, APanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(APanel).call(this, props));\n\n    _this.ChangeDoc = function (event) {\n      event.preventDefault();\n      var link = event.target.value;\n      window.location = link;\n    };\n\n    _this.handleChange = function (event) {\n      event.preventDefault();\n      var date = event.target.value;\n      console.log(date); // var currentDate = `${new Date().getFullYear()}-${new Date().getMonth()+1}-${new Date().getDate()}`\n      // console.log(currentDate)\n\n      console.log(_this.state.CDate);\n      date = new Date(date); //console.log('date', Math.floor(date.getTime() / 1000))\n\n      var unixTimeStamp = Math.floor(date.getTime() / 1000);\n\n      _this.setState({\n        date: unixTimeStamp\n      });\n\n      console.log(\"\".concat(unixTimeStamp)); //console.log(this.state.date)\n      //console.log('name1', event.target.name1.value)\n    };\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(event) {\n        var Vname, roll, date, unixTimeStamp, Edate, message, testing, Check;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                event.preventDefault();\n                console.log(\"Submitting file to ipfs...\");\n                Vname = event.target.name.value;\n                roll = event.target.roll.value;\n\n                _this.setState({\n                  name: Vname\n                });\n\n                _this.setState({\n                  roll: roll\n                });\n\n                date = event.target.date.value;\n                date = new Date(date);\n                unixTimeStamp = Math.floor(date.getTime() / 1000);\n\n                _this.setState({\n                  date: unixTimeStamp\n                });\n\n                Edate = _this.state.date;\n                ipfs.add(_this.state.buffer, function (error, result) {\n                  console.log('Ipfs result', result[0]);\n\n                  _this.setState({\n                    hash: result[0].hash\n                  });\n\n                  if (error) {\n                    console.error(error);\n                    return;\n                  }\n                  /*\r\n                   this.state.contract.methods.set(result[0].hash).send({ from: this.state.account }).then((r) => {\r\n                     return this.setState({ memeHash: result[0].hash }),this.setState({ useraccount: useraccount })\r\n                     ,this.setState({ name: name }),this.setState({ roll: roll }),this.setState({ key: key })\r\n                     ,this.setState({ hash: result[0].hash })\r\n                   })\r\n                   */\n\n\n                  Check(); //testing();\n                });\n\n                testing =\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee5() {\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.prev = 0;\n\n                            if (!(2 === message.toNumber())) {\n                              _context5.next = 7;\n                              break;\n                            }\n\n                            window.alert('Student Info is Being Added.....');\n                            _context5.next = 5;\n                            return _this.state.contract.methods.CreateUser(Vname, roll, Edate, _this.state.hash).send({\n                              from: _this.state.account\n                            });\n\n                          case 5:\n                            _context5.next = 8;\n                            break;\n\n                          case 7:\n                            if (1 === message.toNumber()) {\n                              window.alert('Student Info Already Exists!!');\n                            } else if (0 === message.toNumber()) {\n                              window.alert('Duplicate Certificate Cannot be Used!!');\n                            }\n\n                          case 8:\n                            _context5.next = 13;\n                            break;\n\n                          case 10:\n                            _context5.prev = 10;\n                            _context5.t0 = _context5[\"catch\"](0);\n                            console.error(_context5.t0);\n\n                          case 13:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5, null, [[0, 10]]);\n                  }));\n\n                  return function testing() {\n                    return _ref2.apply(this, arguments);\n                  };\n                }();\n\n                Check =\n                /*#__PURE__*/\n                function () {\n                  var _ref3 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee6() {\n                    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            _context6.prev = 0;\n                            _context6.next = 3;\n                            return _this.state.contract.methods.CreateUser(Vname, roll, Edate, _this.state.hash).call({\n                              from: _this.state.account\n                            });\n\n                          case 3:\n                            message = _context6.sent;\n                            console.log(message.toNumber());\n                            _context6.next = 7;\n                            return testing();\n\n                          case 7:\n                            _context6.next = 12;\n                            break;\n\n                          case 9:\n                            _context6.prev = 9;\n                            _context6.t0 = _context6[\"catch\"](0);\n                            console.error(_context6.t0);\n\n                          case 12:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6, null, [[0, 9]]);\n                  }));\n\n                  return function Check() {\n                    return _ref3.apply(this, arguments);\n                  };\n                }(); //console.log(this.state.useraccount)\n\n\n              case 14:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      showHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null,\n      name: null,\n      hash: null,\n      roll: null,\n      user: null,\n      date: null,\n      CDate: null,\n      Allusers: null,\n      ArrayUser: null\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.ChangeDoc = _this.ChangeDoc.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.onSubmit3 = this.onSubmit3.bind(this);\n\n    return _this;\n  }\n\n  _createClass(APanel, [{\n    key: \"render\",\n    value: function render() {\n      var datas = this.state.ArrayUser;\n      var heading = ['Versity Name', 'Roll', 'Start Date', 'End Date', 'Hash'];\n      var msg;\n\n      if (datas) {\n        msg = this.state.ArrayUser;\n      } else {\n        msg = true;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"mt-5 mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Admin\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"select\", {\n        name: \"Doctype\",\n        onChange: this.ChangeDoc,\n        className: \"text-center mb-2 mr-auto ml-auto\",\n        style: {\n          fontSize: '30px',\n          width: '400px',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"/APanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \" ADMIN PANEL \"), React.createElement(\"option\", {\n        value: \"/Admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \" STUDENT CERTIFICATE \"), React.createElement(\"option\", {\n        value: \"/Notice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \" NOTICE \")), React.createElement(\"hr\", {\n        style: {\n          color: '#000000',\n          backgroundColor: '#000000',\n          height: .5,\n          borderColor: '#000000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      })), React.createElement(\"h1\", {\n        className: \"mt-5 mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"All Users\"), React.createElement(Table, {\n        heading: heading,\n        body: msg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"mb-5\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Versity Name : \"), React.createElement(\"select\", {\n        name: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Select--\"), React.createElement(\"option\", {\n        value: \"Ahsanullah University\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Ahsanullah University\"))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Roll No :\"), React.createElement(\"input\", {\n        className: \"ml-3\",\n        type: \"text\",\n        name: \"roll\",\n        placeholder: \"Enter Student Roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        style: {\n          backgroundColor: '#00A884'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        style: {\n          color: '#000000',\n          backgroundColor: '#000000',\n          height: .5,\n          borderColor: '#000000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return APanel;\n}(Component);\n\nexport default APanel;","map":{"version":3,"sources":["C:\\Users\\Ayon\\Desktop\\Thesis\\Project\\src\\components\\APanel.js"],"names":["React","Component","useEffect","useState","Web3","axios","DatePicker","Link","useNavigate","Authenticate","ipfsClient","require","projectId","projectSecret","auth","Buffer","from","toString","ipfs","host","port","protocol","headers","authorization","Table","heading","props","body","map","head","row","TableRow","console","log","val","APanel","loadWeb3","loadBlockchainData","setState","CDate","Date","getFullYear","getMonth","getDate","fetchData","a","state","contract","methods","AllUser","call","account","Allusers","i","length","toLocaleDateString","ArrayUser","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","Contract","abi","address","ChangeDoc","event","preventDefault","link","target","value","location","handleChange","date","unixTimeStamp","Math","floor","getTime","captureFile","file","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","result","onSubmit","Vname","name","roll","Edate","add","error","hash","Check","testing","message","toNumber","CreateUser","send","showHash","user","bind","datas","msg","fontSize","width","fontWeight","color","backgroundColor","height","borderColor"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAAQC,IAAR,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AACA,IAAMC,SAAS,GAAG,6BAAlB;AACA,IAAMC,aAAa,GAAG,kCAAtB;AACA,IAAMC,IAAI,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYJ,SAAS,GAAG,GAAZ,GAAkBC,aAA9B,EAA6CI,QAA7C,CAAsD,QAAtD,CAAxB;AACA,IAAMC,IAAI,GAAGR,UAAU,CAAC;AAAES,EAAAA,IAAI,EAAE,gBAAR;AAA0BC,EAAAA,IAAI,EAAE,IAAhC;AAAsCC,EAAAA,QAAQ,EAAE,OAAhD;AAAyDC,EAAAA,OAAO,EAAE;AAACC,IAAAA,aAAa,EAAET;AAAhB;AAAlE,CAAD,CAAvB,C,CAAoH;;IAE9GU,K;;;;;;;;;;;;;6BACK;AACL,UAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAzB;AACA,UAAIE,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI;AAAA,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAL,CAAJ;AAAA,OAAhB,CADL,CADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,IAAI,CAACC,GAAL,CAAS,UAAAE,GAAG;AAAA,eAAI,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAAZ,CADL,CANJ,CADJ;AAaH;;;;EAlBiB7B,S;;IAqBd8B,Q;;;;;;;;;;;;;6BACK;AACL,UAAID,GAAG,GAAG,CAAC,KAAKJ,KAAL,CAAWI,GAAZ,CAAV;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,GAAG,CAACF,GAAJ,CAAQ,UAAAM,GAAG;AAAA,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,GAAG,CAAC,CAAD,CAAR,CAAJ;AAAA,OAAX,CADL,CADJ;AAKH;;;;EAToBjC,S;;IAYjBkC,M;;;;;;;;;;;;;;;;;uBAEQ,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;AACN,qBAAKC,QAAL,CAAc;AAACC,kBAAAA,KAAK,YAAM,IAAIC,IAAJ,GAAWC,WAAX,EAAN,cAAkC,IAAID,IAAJ,GAAWE,QAAX,KAAsB,CAAxD,cAA6D,IAAIF,IAAJ,GAAWG,OAAX,EAA7D;AAAN,iBAAd;;uBACc,KAAKC,SAAL,E;;;AAAVC,gBAAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAYiB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,OAApB,CAA4BC,OAA5B,GAAsCC,IAAtC,CAA2C;AAAClC,kBAAAA,IAAI,EAAE,KAAK8B,KAAL,CAAWK;AAAlB,iBAA3C,C;;;AAAjBC,gBAAAA,Q;;AACJ,qBAASC,CAAT,GAAW,CAAX,EAAcA,CAAC,GAAGD,QAAQ,CAACE,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCD,kBAAAA,QAAQ,CAACC,CAAD,CAAR,CAAY,CAAZ,cAAoB,IAAIb,IAAJ,CAASY,QAAQ,CAACC,CAAD,CAAR,CAAY,CAAZ,IAAiB,IAA1B,EAAgCE,kBAAhC,CAAmD,OAAnD,CAApB;AACAH,kBAAAA,QAAQ,CAACC,CAAD,CAAR,CAAY,CAAZ,cAAoB,IAAIb,IAAJ,CAASY,QAAQ,CAACC,CAAD,CAAR,CAAY,CAAZ,IAAiB,IAA1B,EAAgCE,kBAAhC,CAAmD,OAAnD,CAApB;AACD;;AACD,qBAAKjB,QAAL,CAAc;AAACc,kBAAAA,QAAQ,EAAGA;AAAZ,iBAAd;;AAEA,qBAASC,CAAT,GAAW,CAAX,EAAcA,CAAC,GAAGD,QAAQ,CAACE,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCD,kBAAAA,QAAQ,CAACC,CAAD,CAAR,GAAc,CAACD,QAAQ,CAACC,CAAD,CAAR,CAAY,CAAZ,CAAD,EAAgBD,QAAQ,CAACC,CAAD,CAAR,CAAY,CAAZ,CAAhB,EAA+BD,QAAQ,CAACC,CAAD,CAAR,CAAY,CAAZ,CAA/B,EAA8CD,QAAQ,CAACC,CAAD,CAAR,CAAY,CAAZ,CAA9C,EAA6DD,QAAQ,CAACC,CAAD,CAAR,CAAY,CAAZ,CAA7D,CAAd;AACD;;AACD,qBAAKf,QAAL,CAAc;AAACkB,kBAAAA,SAAS,EAAGJ;AAAb,iBAAd;AACApB,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKa,KAAL,CAAWU,SAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;qBAIIC,MAAM,CAACC,Q;;;;;AACTD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIvD,IAAJ,CAASqD,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AAEH,oBAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIvD,IAAJ,CAASqD,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,iBAFI,MAGA;AACHJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,qEAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIKH,gBAAAA,I,GAAOF,MAAM,CAACE,I,EACpB;;;uBACuBA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACN,qBAAK3B,QAAL,CAAc;AAAEa,kBAAAA,OAAO,EAAEc,QAAQ,CAAC,CAAD;AAAnB,iBAAd,E,CACA;;;uBACwBN,IAAI,CAACI,GAAL,CAASG,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AACAC,gBAAAA,W,GAAc5D,YAAY,CAAC6D,QAAb,CAAsBF,SAAtB,C;AAEpB;;;;;;;;AASA,oBAAIC,WAAJ,EAAiB;AACTtB,kBAAAA,QADS,GACEY,IAAI,CAACI,GAAL,CAASQ,QAAT,CAAkB9D,YAAY,CAAC+D,GAA/B,EAAoCH,WAAW,CAACI,OAAhD,CADF;AAEf,uBAAKnC,QAAL,CAAc;AAAES,oBAAAA,QAAQ,EAARA;AAAF,mBAAd,EAFe,CAGf;AACA;AACD,iBALD,MAKO;AACLU,kBAAAA,MAAM,CAACK,KAAP,CAAa,kDAAb;AACD;;;;;;;;;;;;;;;;;;AAGH,kBAAYpC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UAuBnBgD,SAvBmB,GAuBP,UAACC,KAAD,EAAW;AACrBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAxB;AACAtB,MAAAA,MAAM,CAACuB,QAAP,GAAkBH,IAAlB;AACD,KA3BkB;;AAAA,UA6BnBI,YA7BmB,GA6BJ,UAACN,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIM,IAAI,GAAGP,KAAK,CAACG,MAAN,CAAaC,KAAxB;AACA/C,MAAAA,OAAO,CAACC,GAAR,CAAYiD,IAAZ,EAHwB,CAIxB;AACA;;AACAlD,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKa,KAAL,CAAWP,KAAvB;AACA2C,MAAAA,IAAI,GAAG,IAAI1C,IAAJ,CAAS0C,IAAT,CAAP,CAPwB,CAQxB;;AAEA,UAAIC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,OAAL,KAAiB,IAA5B,CAApB;;AAEA,YAAKhD,QAAL,CAAc;AAAC4C,QAAAA,IAAI,EAAEC;AAAP,OAAd;;AAEAnD,MAAAA,OAAO,CAACC,GAAR,WAAekD,aAAf,GAdwB,CAexB;AACA;AACD,KA9CkB;;AAAA,UAgDnBI,WAhDmB,GAgDL,UAACZ,KAAD,EAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAMY,IAAI,GAAGb,KAAK,CAACG,MAAN,CAAaW,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIjC,MAAM,CAACkC,UAAX,EAAf;AACAD,MAAAA,MAAM,CAACE,iBAAP,CAAyBJ,IAAzB;;AACAE,MAAAA,MAAM,CAACG,SAAP,GAAmB,YAAM;AACvB,cAAKvD,QAAL,CAAc;AAAEwD,UAAAA,MAAM,EAAE/E,MAAM,CAAC2E,MAAM,CAACK,MAAR;AAAhB,SAAd;;AACA/D,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,MAAKa,KAAL,CAAWgD,MAAjC;AACD,OAHD;AAID,KAzDkB;;AAAA,UA2DnBE,QA3DmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BA2DR,kBAAOrB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACTA,gBAAAA,KAAK,CAACC,cAAN;AACA5C,gBAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACMgE,gBAAAA,KAHG,GAGKtB,KAAK,CAACG,MAAN,CAAaoB,IAAb,CAAkBnB,KAHvB;AAIHoB,gBAAAA,IAJG,GAIIxB,KAAK,CAACG,MAAN,CAAaqB,IAAb,CAAkBpB,KAJtB;;AAKT,sBAAKzC,QAAL,CAAc;AAAE4D,kBAAAA,IAAI,EAAED;AAAR,iBAAd;;AACA,sBAAK3D,QAAL,CAAc;AAAE6D,kBAAAA,IAAI,EAAEA;AAAR,iBAAd;;AAGIjB,gBAAAA,IATK,GASEP,KAAK,CAACG,MAAN,CAAaI,IAAb,CAAkBH,KATpB;AAUTG,gBAAAA,IAAI,GAAG,IAAI1C,IAAJ,CAAS0C,IAAT,CAAP;AACIC,gBAAAA,aAXK,GAWWC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,OAAL,KAAiB,IAA5B,CAXX;;AAYT,sBAAKhD,QAAL,CAAc;AAAC4C,kBAAAA,IAAI,EAAEC;AAAP,iBAAd;;AACMiB,gBAAAA,KAbG,GAaK,MAAKtD,KAAL,CAAWoC,IAbhB;AAgBThE,gBAAAA,IAAI,CAACmF,GAAL,CAAS,MAAKvD,KAAL,CAAWgD,MAApB,EAA4B,UAACQ,KAAD,EAAQP,MAAR,EAAmB;AAC7C/D,kBAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B8D,MAAM,CAAC,CAAD,CAAjC;;AACA,wBAAKzD,QAAL,CAAc;AAAEiE,oBAAAA,IAAI,EAAER,MAAM,CAAC,CAAD,CAAN,CAAUQ;AAAlB,mBAAd;;AACA,sBAAID,KAAJ,EAAW;AACTtE,oBAAAA,OAAO,CAACsE,KAAR,CAAcA,KAAd;AACA;AACD;AACD;;;;;;;;;AAOAE,kBAAAA,KAAK,GAdwC,CAe7C;AAKD,iBApBD;;AAqBMC,gBAAAA,OArCG;AAAA;AAAA;AAAA;AAAA;AAAA,2CAqCO;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kCAET,MAAMC,OAAO,CAACC,QAAR,EAFG;AAAA;AAAA;AAAA;;AAGVlD,4BAAAA,MAAM,CAACK,KAAP,CAAa,kCAAb;AAHU;AAAA,mCAIJ,MAAKhB,KAAL,CAAWC,QAAX,CAAoBC,OAApB,CAA4B4D,UAA5B,CAAuCX,KAAvC,EAA8CE,IAA9C,EAAmDC,KAAnD,EAA0D,MAAKtD,KAAL,CAAWyD,IAArE,EAA2EM,IAA3E,CAAgF;AAAC7F,8BAAAA,IAAI,EAAE,MAAK8B,KAAL,CAAWK;AAAlB,6BAAhF,CAJI;;AAAA;AAAA;AAAA;;AAAA;AAMP,gCAAG,MAAMuD,OAAO,CAACC,QAAR,EAAT,EAA4B;AAC/BlD,8BAAAA,MAAM,CAACK,KAAP,CAAa,+BAAb;AACD,6BAFI,MAGA,IAAG,MAAM4C,OAAO,CAACC,QAAR,EAAT,EAA4B;AAC/BlD,8BAAAA,MAAM,CAACK,KAAP,CAAa,wCAAb;AACD;;AAXW;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeZ9B,4BAAAA,OAAO,CAACsE,KAAR;;AAfY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBArCP;;AAAA,kCAqCHG,OArCG;AAAA;AAAA;AAAA;;AAuDHD,gBAAAA,KAvDG;AAAA;AAAA;AAAA;AAAA;AAAA,2CAuDK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEM,MAAK1D,KAAL,CAAWC,QAAX,CAAoBC,OAApB,CAA4B4D,UAA5B,CAAuCX,KAAvC,EAA8CE,IAA9C,EAAmDC,KAAnD,EAA0D,MAAKtD,KAAL,CAAWyD,IAArE,EAA2ErD,IAA3E,CAAgF;AAAClC,8BAAAA,IAAI,EAAE,MAAK8B,KAAL,CAAWK;AAAlB,6BAAhF,CAFN;;AAAA;AAEVuD,4BAAAA,OAFU;AAGV1E,4BAAAA,OAAO,CAACC,GAAR,CAAYyE,OAAO,CAACC,QAAR,EAAZ;AAHU;AAAA,mCAKJF,OAAO,EALH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOVzE,4BAAAA,OAAO,CAACsE,KAAR;;AAPU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAvDL;;AAAA,kCAuDHE,KAvDG;AAAA;AAAA;AAAA,qBAkET;;;AAlES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA3DQ;;AAAA;AAAA;AAAA;AAAA;;AAGjB,UAAK1D,KAAL,GAAa;AACXgE,MAAAA,QAAQ,EAAE,EADC;AAEX/D,MAAAA,QAAQ,EAAE,IAFC;AAGXY,MAAAA,IAAI,EAAE,IAHK;AAIXmC,MAAAA,MAAM,EAAE,IAJG;AAKX3C,MAAAA,OAAO,EAAE,IALE;AAMX+C,MAAAA,IAAI,EAAE,IANK;AAOXK,MAAAA,IAAI,EAAE,IAPK;AAQXJ,MAAAA,IAAI,EAAE,IARK;AASXY,MAAAA,IAAI,EAAE,IATK;AAUX7B,MAAAA,IAAI,EAAE,IAVK;AAWX3C,MAAAA,KAAK,EAAG,IAXG;AAYXa,MAAAA,QAAQ,EAAG,IAZA;AAaXI,MAAAA,SAAS,EAAG;AAbD,KAAb;AAeA,UAAKyB,YAAL,GAAoB,MAAKA,YAAL,CAAkB+B,IAAlB,uDAApB;AACA,UAAKtC,SAAL,GAAiB,MAAKA,SAAL,CAAesC,IAAf,uDAAjB,CAnBiB,CAoBjB;;AApBiB;AAsBlB;;;;6BA0GM;AACP,UAAMC,KAAK,GAAG,KAAKnE,KAAL,CAAWU,SAAzB;AACA,UAAI/B,OAAO,GAAG,CAAC,cAAD,EAAiB,MAAjB,EAAyB,YAAzB,EAAuC,UAAvC,EAAmD,MAAnD,CAAd;AACA,UAAIyF,GAAJ;;AACA,UAAID,KAAJ,EAAW;AACTC,QAAAA,GAAG,GAAG,KAAKpE,KAAL,CAAWU,SAAjB;AACD,OAFD,MAEO;AACL0D,QAAAA,GAAG,GAAG,IAAN;AACD;;AACC,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,EAGQ;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAE,KAAKxC,SAAtC;AAAiD,QAAA,SAAS,EAAC,kCAA3D;AAA8F,QAAA,KAAK,EAAE;AAACyC,UAAAA,QAAQ,EAAE,MAAX;AAAmBC,UAAAA,KAAK,EAAG,OAA3B;AAAoCC,UAAAA,UAAU,EAAE;AAAhD,SAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CAHR,EAQQ;AAAI,QAAA,KAAK,EAAE;AACXC,UAAAA,KAAK,EAAE,SADI;AAEXC,UAAAA,eAAe,EAAE,SAFN;AAGXC,UAAAA,MAAM,EAAE,EAHG;AAIXC,UAAAA,WAAW,EAAE;AAJF,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARR,EAcQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CAdR,EAgBQ;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAhBR,EAmBQ,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAEhG,OAAhB;AAAyB,QAAA,IAAI,EAAEyF,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBR,EAyBQ;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAE,KAAKlB,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAQ,QAAA,KAAK,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,CAFF,CAFA,EAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CAfA,EAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,IAAI,EAAC,MAA7B;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,WAAW,EAAC,oBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAjBA,EAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CAtBA,EAyBA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAE;AAAEuB,UAAAA,eAAe,EAAE;AAAnB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBA,EA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CA1BA,CAzBR,EAwDQ;AAAI,QAAA,KAAK,EAAE;AACXD,UAAAA,KAAK,EAAE,SADI;AAEXC,UAAAA,eAAe,EAAE,SAFN;AAGXC,UAAAA,MAAM,EAAE,EAHG;AAIXC,UAAAA,WAAW,EAAE;AAJF,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxDR,EA8DQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CA9DR,CADJ;AAkEL;;;;EAnRkBxH,S;;AAsRrB,eAAekC,MAAf","sourcesContent":["import React, { Component, useEffect, useState} from 'react';\r\nimport Web3 from 'web3';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-date-picker';\r\nimport {Link , useNavigate}  from \"react-router-dom\";\r\nimport './App.css';\r\nimport Authenticate from '../abis/Authenticate.json';\r\n\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst projectId = '2H7jMnviMZjZB4fq4w0leaswjCQ';\r\nconst projectSecret = 'e508e5b9f5e92b15c0f02a871e4b5524';\r\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' ,headers: {authorization: auth,},}) // leaving out the arguments will default to these values\r\n\r\nclass Table extends Component {\r\n  render() {\r\n      var heading = this.props.heading;\r\n      var body = this.props.body;\r\n      \r\n      return (\r\n          <table>\r\n              <thead>\r\n                  <tr>\r\n                      {heading.map(head => <th>{head}</th>)}\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  {body.map(row => <TableRow row={row} />)\r\n                  }\r\n              </tbody>\r\n          </table>\r\n      );\r\n  }\r\n}\r\n\r\nclass TableRow extends Component {\r\n  render() {\r\n      var row = [this.props.row];\r\n      console.log(row)\r\n      return (\r\n          <tr>\r\n              {row.map(val => <td>{val[0]}</td>)}\r\n          </tr>\r\n      )\r\n  }\r\n}\r\n\r\nclass APanel extends Component {\r\n    async componentWillMount() {\r\n        await this.loadWeb3()\r\n        await this.loadBlockchainData()\r\n        this.setState({CDate : `${new Date().getFullYear()}-${new Date().getMonth()+1}-${new Date().getDate()}`})\r\n        var a = await this.fetchData()\r\n        /*\r\n        const accounts = await window.web3.eth.getAccounts()\r\n        console.log(accounts)\r\n        const contract = await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address)\r\n        console.log(contract)\r\n        const ca = await contract.methods.CAaddress().call()\r\n        console.log(ca)\r\n        console.log(await window.web3.eth.Contract(Authenticate.abi, Authenticate.networks[5777].address).methods.CAaddress(accounts[0]).call())\r\n        */\r\n      }\r\n      async fetchData() {\r\n        var Allusers = await this.state.contract.methods.AllUser().call({from: this.state.account,})\r\n        for (var i=0; i < Allusers.length; i++) {\r\n          Allusers[i][2] = `${new Date(Allusers[i][2] * 1000).toLocaleDateString('en-GB')}`\r\n          Allusers[i][3] = `${new Date(Allusers[i][3] * 1000).toLocaleDateString('en-GB')}`\r\n        }\r\n        this.setState({Allusers : Allusers})\r\n        \r\n        for (var i=0; i < Allusers.length; i++) {\r\n          Allusers[i] = [Allusers[i][0],Allusers[i][1],Allusers[i][2],Allusers[i][3],Allusers[i][4]]\r\n        }\r\n        this.setState({ArrayUser : Allusers})\r\n        console.log(this.state.ArrayUser)\r\n      }\r\n    \r\n      async loadWeb3() {\r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum)\r\n          await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n        }\r\n      }\r\n    \r\n      async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        // Load account\r\n        const accounts = await web3.eth.getAccounts()\r\n        this.setState({ account: accounts[0] })\r\n        //this.setState({ useraccount: accounts[0] })\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Authenticate.networks[networkId]\r\n    \r\n        /* if(await this.state.contract.methods.UserInfo(this.state.useraccount).call()){\r\n         console.log(await this.state.contract.methods.UserInfo(this.state.useraccount).call())\r\n         }\r\n         if(this.state.useraccount){\r\n           const memeHash = await this.state.contract.methods.UserInfo(this.state.useraccount).call()\r\n         console.log(memeHash)}\r\n        */\r\n    \r\n    \r\n        if (networkData) {\r\n          const contract = web3.eth.Contract(Authenticate.abi, networkData.address)\r\n          this.setState({ contract })\r\n          //const memeHash = await contract.methods.get().call()\r\n          //this.setState({ memeHash })\r\n        } else {\r\n          window.alert('Smart contract not deployed to detected network.')\r\n        }\r\n      }\r\n\r\n      constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n          showHash: '',\r\n          contract: null,\r\n          web3: null,\r\n          buffer: null,\r\n          account: null,\r\n          name: null,\r\n          hash: null,\r\n          roll: null,\r\n          user: null,\r\n          date: null,\r\n          CDate : null,\r\n          Allusers : null,\r\n          ArrayUser : null\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.ChangeDoc = this.ChangeDoc.bind(this);\r\n        //this.onSubmit3 = this.onSubmit3.bind(this);\r\n    \r\n      }\r\n      ChangeDoc = (event) => {\r\n        event.preventDefault()\r\n        var link = event.target.value\r\n        window.location = link\r\n      }\r\n\r\n      handleChange = (event) => {\r\n        event.preventDefault()\r\n        var date = event.target.value\r\n        console.log(date)\r\n        // var currentDate = `${new Date().getFullYear()}-${new Date().getMonth()+1}-${new Date().getDate()}`\r\n        // console.log(currentDate)\r\n        console.log(this.state.CDate)\r\n        date = new Date(date);\r\n        //console.log('date', Math.floor(date.getTime() / 1000))\r\n          \r\n        var unixTimeStamp = Math.floor(date.getTime() / 1000);\r\n        \r\n        this.setState({date: unixTimeStamp})\r\n        \r\n        console.log(`${unixTimeStamp}`)\r\n        //console.log(this.state.date)\r\n        //console.log('name1', event.target.name1.value)\r\n      }\r\n    \r\n      captureFile = (event) => {\r\n        event.preventDefault()\r\n        const file = event.target.files[0]\r\n        const reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n        reader.onloadend = () => {\r\n          this.setState({ buffer: Buffer(reader.result) })\r\n          console.log('buffer', this.state.buffer)\r\n        }\r\n      }\r\n    \r\n      onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        console.log(\"Submitting file to ipfs...\")\r\n        const Vname = event.target.name.value\r\n        const roll = event.target.roll.value\r\n        this.setState({ name: Vname })\r\n        this.setState({ roll: roll })\r\n\r\n\r\n        var date = event.target.date.value\r\n        date = new Date(date);\r\n        var unixTimeStamp = Math.floor(date.getTime() / 1000);\r\n        this.setState({date: unixTimeStamp})\r\n        const Edate = this.state.date\r\n        var message; \r\n\r\n        ipfs.add(this.state.buffer, (error, result) => {\r\n          console.log('Ipfs result', result[0])\r\n          this.setState({ hash: result[0].hash })\r\n          if (error) {\r\n            console.error(error)\r\n            return\r\n          }\r\n          /*\r\n           this.state.contract.methods.set(result[0].hash).send({ from: this.state.account }).then((r) => {\r\n             return this.setState({ memeHash: result[0].hash }),this.setState({ useraccount: useraccount })\r\n             ,this.setState({ name: name }),this.setState({ roll: roll }),this.setState({ key: key })\r\n             ,this.setState({ hash: result[0].hash })\r\n           })\r\n           */\r\n          Check();\r\n          //testing();\r\n          \r\n          \r\n          \r\n          \r\n        })\r\n        const testing = async () => {\r\n          try {\r\n            if(2 === message.toNumber()){\r\n              window.alert('Student Info is Being Added.....')\r\n              await this.state.contract.methods.CreateUser(Vname, roll,Edate, this.state.hash).send({from: this.state.account,});\r\n            }\r\n            else if(1 === message.toNumber()){\r\n              window.alert('Student Info Already Exists!!')\r\n            }\r\n            else if(0 === message.toNumber()){\r\n              window.alert('Duplicate Certificate Cannot be Used!!')\r\n            }\r\n          \r\n            \r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n        };\r\n        const Check = async () => {\r\n          try {\r\n            message = await this.state.contract.methods.CreateUser(Vname, roll,Edate, this.state.hash).call({from: this.state.account,});\r\n            console.log(message.toNumber())\r\n\r\n            await testing();\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n        };\r\n        \r\n        //console.log(this.state.useraccount)\r\n      }\r\n\r\n    render() {\r\n      const datas = this.state.ArrayUser;\r\n      var heading = ['Versity Name', 'Roll', 'Start Date', 'End Date', 'Hash'];\r\n      let msg;\r\n      if (datas) {\r\n        msg = this.state.ArrayUser;\r\n      } else {\r\n        msg = true;\r\n      }\r\n        return (\r\n            <div>\r\n                <h1 className=\"mt-5 mr-auto ml-auto\" >Admin</h1>\r\n                    <p>&nbsp;</p>\r\n                    <select name=\"Doctype\" onChange={this.ChangeDoc} className='text-center mb-2 mr-auto ml-auto' style={{fontSize: '30px', width : '400px' ,fontWeight: 'bold'} }>\r\n                        <option value=\"/APanel\"> ADMIN PANEL </option>\r\n                        <option value=\"/Admin\"> STUDENT CERTIFICATE </option>\r\n                        <option value=\"/Notice\"> NOTICE </option>\r\n                    </select>\r\n                    <hr style={{\r\n                    color: '#000000',\r\n                    backgroundColor: '#000000',\r\n                    height: .5,\r\n                    borderColor: '#000000'\r\n                    }} />\r\n                    <p><br></br></p>\r\n\r\n                    <h1 className=\"mt-5 mr-auto ml-auto\" >All Users</h1>\r\n\r\n\r\n                    <Table heading={heading} body={msg} />\r\n\r\n\r\n\r\n                    \r\n\r\n                    <form className=\"mb-5\" onSubmit={this.onSubmit}>\r\n\r\n                    <label>\r\n                      <b>Versity Name : </b>\r\n                      <select name=\"name\">\r\n                        <option value=\"\">Select--</option>\r\n                        <option value=\"Ahsanullah University\">Ahsanullah University</option>\r\n                      </select>\r\n                    </label>\r\n\r\n                    {/* <label>\r\n                        <b>Versity Name :</b>\r\n                        <input className=\"ml-3\" type=\"text\" name=\"name1\" placeholder=\"Enter Versity Name\" />\r\n\r\n                    </label> */}\r\n                    <p><br></br></p>\r\n\r\n                    <label>\r\n                        <b>Roll No :</b>\r\n                        <input className=\"ml-3\" type=\"text\" name=\"roll\" placeholder=\"Enter Student Roll\" />\r\n\r\n                    </label>\r\n                    <p><br></br></p>\r\n                    \r\n\r\n                    <input type='submit' style={{ backgroundColor: '#00A884' }} />\r\n                    <p><br></br></p>\r\n                    \r\n                    </form>\r\n\r\n\r\n                    <hr style={{\r\n                    color: '#000000',\r\n                    backgroundColor: '#000000',\r\n                    height: .5,\r\n                    borderColor: '#000000'\r\n                    }} />\r\n                    <p><br></br></p>\r\n            </div>\r\n            );\r\n  }\r\n}\r\n\r\nexport default APanel;"]},"metadata":{},"sourceType":"module"}